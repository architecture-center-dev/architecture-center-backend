var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.128,1,2.105]],["body/modules/AppModule.html",[0,1.571,1,3.939,2,1.194,3,1.194,4,1.57,5,1.57,6,1.302,7,2.256,8,1.57,9,2.249,10,2.249,11,3.183,12,0.031,13,3.183,14,3.183,15,2.891,16,2.256,17,1.57,18,1.426,19,0.318,20,0.248,21,0.215,22,2.689,23,2.504,24,0.786,25,0.479,26,2.249,27,2.689,28,2.689,29,2.689,30,1.959,31,1.426,32,1.455,33,2.689,34,2.689,35,1.194,36,2.689,37,2.249,38,2.049,39,2.689,40,2.689,41,2.689,42,0.572,43,2.689,44,2.689,45,2.689,46,2.689,47,2.689,48,2.249,49,2.689,50,2.689,51,2.689,52,1.742,53,2.689,54,2.689,55,2.689,56,1.959,57,2.815,58,1.194,59,0.318,60,0.094,61,0.013,62,0.018,63,0.013]],["title/controllers/AuthController.html",[64,1.573,65,2.105]],["body/controllers/AuthController.html",[12,0.031,19,0.304,20,0.237,21,0.205,24,0.711,25,0.458,32,1.409,42,0.548,57,3.529,58,1.143,59,0.304,60,0.09,61,0.023,62,0.018,63,0.012,64,1.813,65,2.425,66,2.152,67,0.458,68,1.3,69,3.13,70,2.848,71,2.727,72,3.13,73,2.152,74,1.96,75,2.573,76,1.022,77,2.573,78,1.532,79,1.306,80,1.532,81,1.532,82,2.573,83,2.573,84,2.573,85,2.152,86,3.135,87,2.573,88,2.573,89,1.874,90,2.573,91,1.667,92,2.573,93,2.573,94,2.152,95,2.152,96,2.573,97,2.137,98,1.874,99,1.667,100,2.573,101,2.727,102,1.364,103,2.573,104,2.152,105,2.573,106,1.502,107,2.573,108,2.573,109,2.573,110,2.573,111,1.532,112,2.573,113,1.874,114,2.573,115,2.152,116,2.573,117,2.573,118,2.573,119,2.573,120,1.143,121,1.409,122,1.502,123,2.573,124,2.573,125,1.874,126,1.246,127,2.573,128,2.152]],["title/modules/AuthModule.html",[0,1.128,11,1.896]],["body/modules/AuthModule.html",[0,1.6,2,1.234,3,1.234,4,1.622,5,1.622,6,1.346,7,2.689,8,2.689,11,3.6,12,0.031,15,2.923,16,2.309,17,1.622,18,1.473,19,0.329,20,0.256,21,0.222,23,2.564,24,0.781,25,0.495,26,2.324,58,1.757,59,0.329,60,0.097,61,0.013,62,0.019,63,0.013,65,2.985,97,2.962,98,2.024,129,2.324,130,2.779,131,2.324,132,2.324,133,3.219,134,3.219,135,2.779,136,2.779,137,2.779,138,3.956,139,1.346,140,2.779,141,2.024,142,1.801,143,2.324,144,2.779,145,2.779,146,2.324,147,2.324,148,2.779,149,2.779,150,2.779]],["title/injectables/AuthService.html",[97,1.573,151,0.579]],["body/injectables/AuthService.html",[12,0.031,19,0.281,20,0.219,21,0.19,24,0.617,25,0.423,32,1.755,42,0.992,59,0.281,60,0.083,61,0.011,62,0.017,63,0.011,67,0.423,68,1.226,70,2.768,71,2.571,72,2.951,76,1.08,78,1.619,79,1.38,80,1.619,81,1.463,85,2.951,86,3.047,94,1.986,95,1.986,97,1.709,104,1.986,111,1.619,120,1.871,121,1.965,122,1.386,125,1.73,126,1.15,128,1.986,141,1.73,151,0.629,152,0.894,153,1.986,154,2.233,155,3.529,156,1.709,157,2.375,158,2.071,159,5.405,160,2.375,161,3.529,162,3.529,163,2.375,164,2.375,165,3.529,166,4.662,167,2.375,168,2.06,169,2.571,170,2.375,171,2.571,172,2.375,173,2.951,174,1.986,175,2.375,176,2.375,177,2.375,178,2.375,179,2.375,180,2.233,181,3.522,182,2.375,183,1.386,184,2.375,185,2.375,186,2.375]],["title/classes/Board.html",[38,1.722,60,0.113]],["body/classes/Board.html",[12,0.031,19,0.372,20,0.29,21,0.251,24,0.571,35,1.398,38,2.288,42,1.128,52,3.191,59,0.372,60,0.11,61,0.015,62,0.02,63,0.015,67,0.56,74,2.354,76,1.228,79,1.568,121,1.995,183,2.875,187,1.524,188,2.631,189,2.288,190,4.925,191,3.588,192,4.119,193,4.315,194,2.292,195,3.146,196,4.644,197,3.609,198,3.146,199,2.631,200,2.631,201,3.146,202,3.146,203,3.609,204,4.119,205,3.588,206,1.668,207,2.796,208,2.631,209,3.609,210,3.609]],["title/injectables/BoardService.html",[151,0.579,211,1.722]],["body/injectables/BoardService.html",[12,0.031,19,0.427,20,0.333,21,0.288,24,0.741,25,0.643,31,1.914,38,1.914,42,0.768,59,0.427,60,0.126,61,0.017,62,0.022,63,0.017,67,0.643,68,1.644,76,1.096,78,1.254,79,1.068,80,1.254,81,1.254,111,1.254,151,0.843,152,1.359,156,2.292,171,2.63,206,1.914,211,2.509,212,3.019,213,4.686,214,3.61,215,3.63,216,3.61,217,4.732,218,3.61,219,3.019,220,3.019,221,3.61,222,3.61]],["title/controllers/BoardsController.html",[64,1.573,223,2.105]],["body/controllers/BoardsController.html",[12,0.031,19,0.437,20,0.34,21,0.295,24,0.706,25,0.657,57,3.497,58,1.639,59,0.437,60,0.128,61,0.018,62,0.023,63,0.018,64,1.787,67,0.657,68,1.667,69,4.015,73,3.086,74,1.639,76,0.855,78,1.282,79,1.092,80,1.282,81,1.282,89,2.688,91,2.391,101,2.688,102,1.956,106,2.154,111,1.282,113,2.688,115,3.086,208,3.086,211,2.829,223,3.11,224,3.086,225,3.086,226,3.69,227,3.69,228,3.69,229,3.086,230,3.69,231,3.69]],["title/modules/BoardsModule.html",[0,1.128,13,1.896]],["body/modules/BoardsModule.html",[0,1.811,2,1.563,3,1.563,4,2.054,5,2.054,6,1.704,7,3.043,8,2.716,12,0.031,13,3.459,16,2.716,17,2.054,18,1.865,19,0.416,20,0.324,21,0.281,23,2.28,24,0.763,25,0.627,30,2.563,31,1.865,38,1.865,58,2.067,59,0.416,60,0.122,61,0.017,62,0.022,63,0.017,211,3.142,220,2.943,223,3.378,229,2.943,232,2.943,233,2.943,234,3.519,235,3.519,236,3.519]],["title/injectables/ClusterService.html",[151,0.579,237,2.366]],["body/injectables/ClusterService.html",[12,0.031,19,0.413,20,0.322,21,0.279,24,0.687,25,0.622,42,0.743,59,0.413,60,0.121,61,0.017,62,0.022,63,0.017,67,0.622,68,1.607,76,0.808,78,1.212,79,1.033,80,1.212,81,1.212,120,1.55,151,0.824,152,1.314,237,3.371,238,2.542,239,5.191,240,4.627,241,4.627,242,4.341,243,3.489,244,4.627,245,4.627,246,4.627,247,3.87,248,2.542,249,2.918,250,2.542,251,3.489,252,3.489,253,2.542,254,3.489,255,2.918,256,2.918,257,3.489,258,3.489,259,3.489]],["title/injectables/GqlAuthGuard.html",[151,0.579,260,2.105]],["body/injectables/GqlAuthGuard.html",[12,0.031,19,0.445,20,0.346,21,0.3,24,0.712,25,0.669,35,1.669,42,0.799,56,2.737,59,0.445,60,0.131,61,0.018,62,0.023,63,0.018,67,0.669,68,1.687,76,0.87,78,1.305,79,1.112,80,1.305,81,1.305,111,1.305,120,1.669,139,1.819,151,0.865,152,1.414,260,3.147,261,3.142,262,4.856,263,4.856,264,4.758,265,3.757,266,2.737,267,3.757,268,2.193,269,3.142,270,3.142,271,3.142,272,3.757]],["title/classes/Image.html",[60,0.113,273,2.105]],["body/classes/Image.html",[12,0.03,19,0.457,20,0.356,21,0.308,24,0.654,35,1.715,42,1.052,59,0.457,60,0.134,61,0.018,62,0.023,63,0.018,67,0.688,74,2.196,76,1.145,121,2.164,183,3.182,187,1.87,189,2.62,194,3.601,205,3.972,206,2.047,207,3.203,273,3.203,274,3.229,275,5.452,276,5.452,277,3.861,278,3.861]],["title/injectables/JwtAuthGuard.html",[102,1.722,151,0.579]],["body/injectables/JwtAuthGuard.html",[12,0.03,19,0.525,20,0.409,21,0.354,24,0.713,25,0.79,59,0.525,60,0.154,61,0.021,62,0.026,63,0.021,102,2.858,139,2.149,151,0.96,152,1.671,266,3.233,268,2.59,269,3.711,279,3.233,280,3.233]],["title/injectables/JwtStrategy.html",[133,1.896,151,0.579]],["body/injectables/JwtStrategy.html",[12,0.031,19,0.403,20,0.314,21,0.272,24,0.724,25,0.606,42,0.724,59,0.403,60,0.118,61,0.016,62,0.022,63,0.016,67,0.606,68,1.581,70,2.718,76,1.054,78,1.182,79,1.007,80,1.182,81,1.182,111,1.182,133,2.656,139,1.648,142,2.205,143,2.846,147,2.846,151,0.811,152,1.281,156,2.483,168,1.987,174,2.846,192,2.846,268,1.987,281,2.846,282,3.806,283,3.403,284,4.551,285,3.403,286,3.403,287,2.846,288,2.479,289,2.846,290,2.846,291,2.846,292,2.846,293,3.403,294,3.403,295,3.403,296,3.403,297,3.403,298,3.403,299,3.403]],["title/injectables/LocalAuthGuard.html",[99,2.105,151,0.579]],["body/injectables/LocalAuthGuard.html",[12,0.03,19,0.525,20,0.409,21,0.354,24,0.713,25,0.79,59,0.525,60,0.154,61,0.021,62,0.026,63,0.021,99,3.493,139,2.149,151,0.96,152,1.671,266,3.233,268,2.59,280,3.233,300,3.711,301,4.437]],["title/injectables/LocalStrategy.html",[134,1.896,151,0.579]],["body/injectables/LocalStrategy.html",[12,0.031,19,0.372,20,0.29,21,0.251,24,0.701,25,0.56,32,1.854,42,0.918,59,0.372,60,0.11,61,0.015,62,0.02,63,0.015,67,0.56,68,1.499,70,2.611,76,1,78,1.499,79,1.277,80,1.499,81,1.093,97,2.778,98,2.292,106,1.836,111,1.093,120,1.398,121,2.159,122,1.836,125,2.292,126,1.524,134,2.519,139,1.524,151,0.769,152,1.185,156,1.524,168,1.836,169,3.144,180,2.81,268,1.836,282,3.609,287,2.631,288,2.292,290,2.631,291,2.631,292,2.631,302,2.631,303,3.146,304,3.146,305,4.315,306,3.146,307,2.631,308,4.315,309,3.146]],["title/classes/OauthTOken.html",[60,0.113,310,2.105]],["body/classes/OauthTOken.html",[12,0.03,19,0.441,20,0.343,21,0.297,24,0.492,35,1.654,42,1.027,59,0.441,60,0.13,61,0.018,62,0.023,63,0.018,67,0.663,74,1.654,76,1.118,78,1.293,79,1.102,80,1.293,121,2.212,154,2.841,156,1.803,183,3.127,187,1.803,189,2.56,207,3.128,310,3.128,311,4.481,312,3.114,313,5.874,314,4.828,315,4.828,316,3.723,317,3.723]],["title/modules/TeamsModule.html",[0,1.128,14,1.896]],["body/modules/TeamsModule.html",[0,1.922,2,2.059,12,0.03,14,3.23,19,0.549,20,0.427,21,0.37,24,0.613,25,0.826,59,0.549,60,0.161,61,0.022,62,0.026,63,0.022,318,4.635]],["title/classes/User.html",[32,1.223,60,0.113]],["body/classes/User.html",[12,0.031,19,0.314,20,0.245,21,0.212,24,0.594,32,1.442,35,1.179,42,1.191,52,3.519,59,0.314,60,0.092,61,0.013,62,0.018,63,0.013,67,0.473,74,2.486,76,1.297,79,1.455,121,2.198,180,2.381,183,3.042,187,1.286,189,2.03,191,3.272,194,3.582,196,3.756,197,2.22,199,4.112,200,3.202,203,3.202,204,3.202,205,4.078,206,1.407,207,2.481,209,2.22,210,3.202,273,3.519,319,2.22,320,3.272,321,4.491,322,4.491,323,2.655,324,3.829,325,2.655,326,2.655,327,2.655,328,2.655,329,2.655,330,2.655,331,2.655,332,1.934]],["title/classes/UserDto.html",[60,0.113,86,1.896]],["body/classes/UserDto.html",[12,0.029,19,0.461,20,0.359,21,0.311,42,1.165,59,0.461,60,0.136,61,0.019,62,0.024,63,0.019,67,0.694,76,1.269,86,2.902,121,2.294,154,3.356,180,2.903,181,4.579,187,1.887,189,2.636,320,3.989,333,3.259,334,3.897,335,3.897,336,3.897]],["title/classes/UserResolver.html",[60,0.113,337,2.105]],["body/classes/UserResolver.html",[12,0.031,19,0.289,20,0.225,21,0.195,24,0.722,25,0.435,32,1.898,35,1.086,42,0.767,59,0.289,60,0.085,61,0.012,62,0.017,63,0.012,67,0.435,68,1.252,70,2.797,71,3.12,74,1.601,76,0.992,78,1.488,79,1.492,80,1.488,81,1.252,91,1.584,106,1.427,111,1.252,120,1.903,121,1.986,122,2.104,126,1.184,154,2.797,156,1.184,158,2.343,168,2.5,180,2.673,187,1.184,260,1.584,310,3.418,332,3.444,337,2.336,338,2.044,339,2.444,340,2.444,341,2.444,342,2.444,343,2.444,344,2.444,345,2.444,346,2.444,347,2.444,348,2.444,349,2.444,350,4.283,351,1.781,352,1.781,353,2.444,354,1.781,355,1.781,356,2.444,357,2.444,358,2.444,359,2.444,360,2.444,361,2.444,362,2.444,363,3.605,364,2.444,365,2.044,366,2.444,367,2.444,368,2.444,369,2.444]],["title/injectables/UserService.html",[151,0.579,158,1.443]],["body/injectables/UserService.html",[12,0.031,19,0.23,20,0.179,21,0.155,24,0.557,25,0.347,31,1.032,32,1.965,42,1.028,52,1.262,59,0.23,60,0.068,61,0.009,62,0.014,63,0.009,67,0.347,68,1.054,70,2.842,76,1.169,78,1.584,79,1.35,80,1.584,81,1.584,111,1.584,120,2.241,121,2.267,122,2.176,126,0.943,151,0.54,152,0.733,156,1.469,158,1.348,169,3.801,171,3.066,173,1.628,180,2.562,189,1.608,191,2.21,206,1.032,213,3.519,215,2.727,219,1.628,250,1.418,320,3.323,352,1.418,370,1.628,371,3.727,372,3.034,373,3.034,374,3.034,375,3.034,376,1.947,377,3.034,378,3.034,379,1.947,380,3.034,381,1.947,382,3.034,383,1.947,384,3.034,385,1.947,386,3.034,387,1.947,388,3.034,389,1.628,390,3.034,391,1.947,392,3.034,393,3.034,394,1.628,395,1.947,396,1.947,397,1.947,398,2.537,399,3.034,400,3.034,401,1.947,402,1.947,403,3.034,404,1.947,405,1.947,406,1.947,407,3.034,408,1.947,409,1.947]],["title/controllers/UsersController.html",[64,1.573,410,2.105]],["body/controllers/UsersController.html",[12,0.031,19,0.447,20,0.348,21,0.301,24,0.713,25,0.672,58,1.676,59,0.447,60,0.131,61,0.018,62,0.023,63,0.018,64,1.828,67,0.672,68,1.692,74,1.676,76,0.874,81,1.311,91,2.445,101,2.749,102,2.001,106,2.203,111,1.311,113,2.749,154,2.859,158,2.396,225,3.156,279,2.749,332,2.749,351,2.749,365,3.156,410,3.156,411,3.156,412,5.699,413,3.774,414,3.774]],["title/modules/UsersModule.html",[0,1.128,15,1.722]],["body/modules/UsersModule.html",[0,1.759,2,1.476,3,1.476,4,1.939,5,1.939,6,1.609,7,2.956,8,2.956,12,0.031,15,3.159,16,2.613,17,1.939,18,1.761,19,0.393,20,0.306,21,0.265,23,2.153,24,0.771,25,0.592,30,2.42,31,1.761,32,1.251,58,1.989,59,0.393,60,0.116,61,0.016,62,0.021,63,0.016,158,2.801,337,2.901,351,2.42,352,2.42,410,3.282,415,2.778,416,2.778,417,2.778,418,3.322,419,3.322,420,3.322,421,3.322]],["title/changelog.html",[422,1.765,423,1.765,424,2.278]],["body/changelog.html",[12,0.028,61,0.024,62,0.028,63,0.024]],["title/contributing.html",[422,1.765,423,1.765,425,1.984]],["body/contributing.html",[3,0.867,12,0.012,20,0.18,21,0.156,61,0.005,62,0.009,63,0.005,89,3.524,126,1.657,154,1.035,168,0.664,215,1.265,247,0.952,255,0.952,394,2.144,424,0.952,425,0.829,426,3.04,427,1.138,428,1.138,429,1.138,430,1.633,431,3.34,432,1.138,433,3.683,434,1.633,435,0.952,436,0.952,437,2.144,438,0.952,439,0.952,440,2.862,441,0.952,442,0.952,443,0.952,444,0.952,445,0.952,446,0.952,447,2.144,448,1.633,449,3.04,450,0.952,451,1.953,452,2.543,453,1.138,454,1.138,455,1.138,456,1.138,457,1.138,458,1.138,459,1.953,460,5.05,461,2.564,462,3.04,463,1.138,464,1.138,465,1.633,466,0.952,467,3.04,468,1.138,469,1.633,470,2.564,471,3.04,472,1.953,473,1.138,474,2.543,475,1.138,476,1.953,477,1.953,478,1.138,479,1.138,480,3.734,481,3.04,482,3.123,483,0.952,484,1.138,485,1.138,486,1.138,487,1.953,488,1.138,489,3.422,490,3.994,491,1.138,492,3.422,493,2.564,494,1.138,495,1.138,496,1.953,497,1.953,498,1.953,499,1.138,500,1.953,501,1.953,502,1.953,503,1.138,504,1.953,505,2.564,506,0.952,507,2.564,508,1.138,509,1.138,510,1.138,511,1.138,512,0.952,513,3.422,514,1.138,515,1.953,516,1.953,517,1.138,518,0.952,519,1.953,520,1.138,521,1.953,522,1.138,523,1.953,524,1.138,525,1.138,526,2.564,527,0.952,528,1.953,529,1.138,530,1.953,531,1.138,532,1.138,533,3.04,534,1.138,535,2.564,536,1.953,537,1.138,538,3.04,539,1.138,540,1.953,541,1.138,542,1.138,543,1.953,544,2.564,545,1.953,546,1.138,547,1.138,548,3.123,549,2.564,550,1.422,551,1.138,552,1.138,553,0.952,554,1.138,555,1.953,556,1.138,557,1.138,558,2.564,559,3.422,560,1.138,561,1.138,562,1.633,563,1.138,564,1.138,565,1.953,566,2.564,567,1.953,568,1.953,569,1.953,570,1.953,571,1.953,572,1.138,573,3.04,574,1.138,575,1.138,576,1.138,577,1.138,578,1.138,579,2.564,580,0.952,581,0.952,582,1.138,583,1.138,584,1.138,585,1.953,586,2.564,587,1.138,588,1.953,589,1.138,590,1.138,591,1.953,592,1.138,593,1.138,594,1.138,595,1.138,596,1.138,597,1.138,598,1.633,599,0.952,600,1.138,601,1.138,602,1.138,603,1.138,604,0.952,605,1.138,606,1.953,607,0.952,608,1.953,609,1.138,610,1.138,611,2.862,612,4.045,613,3.04,614,1.138,615,0.952,616,1.633,617,0.952,618,1.953,619,1.138,620,1.953,621,1.953,622,1.138,623,1.138,624,1.138,625,1.953,626,1.953,627,1.138,628,1.953,629,3.422,630,1.138,631,1.138,632,2.543,633,0.952,634,1.662,635,1.953,636,1.138,637,1.138,638,1.138,639,1.138,640,2.564,641,1.138,642,1.138,643,1.138,644,1.138,645,1.953,646,2.564,647,1.138,648,1.138,649,1.138,650,1.138,651,1.138,652,1.138,653,2.564,654,1.138,655,1.138,656,1.138,657,1.138,658,1.138,659,1.138,660,0.952,661,1.138,662,1.138,663,1.138,664,2.144,665,1.138,666,1.138,667,1.138,668,1.138,669,1.953,670,1.138,671,1.138,672,1.138,673,1.138,674,1.138,675,1.138,676,1.138,677,1.138,678,1.138,679,1.138,680,1.422,681,1.138,682,1.138,683,0.952,684,1.138,685,1.138,686,0.952,687,1.138,688,1.138,689,1.138,690,1.138,691,1.138,692,1.138,693,1.953,694,1.953,695,1.138,696,1.138,697,1.138,698,0.829,699,0.952,700,1.138,701,1.138,702,1.138,703,0.952,704,1.138,705,1.138,706,1.138,707,1.138,708,1.138,709,1.138,710,1.138,711,1.138,712,1.138,713,1.138,714,1.138,715,1.953,716,2.144,717,1.138,718,1.138,719,1.138,720,0.952,721,1.138,722,1.138,723,1.138,724,1.138,725,1.138,726,1.138,727,1.138,728,1.138,729,1.138,730,1.138,731,0.829]],["title/coverage.html",[732,3.688]],["body/coverage.html",[6,1.307,12,0.031,21,0.215,32,1.016,38,1.43,42,0.574,60,0.19,61,0.013,62,0.018,63,0.013,64,2.195,65,1.748,66,2.256,86,1.575,97,1.307,99,1.748,102,1.43,126,1.307,133,1.575,134,1.575,142,1.748,151,1.044,153,2.256,158,1.198,188,2.256,211,1.43,212,2.256,223,1.748,224,2.256,237,1.965,238,2.822,242,2.256,248,1.965,256,5.365,260,1.748,261,2.256,273,1.748,274,2.256,279,1.965,280,2.822,281,2.256,300,2.256,302,2.256,310,1.748,311,2.256,312,2.256,319,2.256,333,2.256,337,1.748,338,2.256,354,1.965,355,1.965,370,2.256,410,1.748,411,2.256,698,1.965,732,2.256,733,2.698,734,2.698,735,2.256,736,4.532,737,5.46,738,4.532,739,2.256,740,4.953,741,3.874,742,5.245,743,2.256,744,3.874,745,2.698,746,2.698]],["title/dependencies.html",[3,1.733,747,2.724]],["body/dependencies.html",[3,1.556,12,0.031,25,0.624,31,1.858,35,1.556,37,2.93,61,0.017,62,0.022,63,0.017,139,1.697,141,2.552,206,1.858,253,2.552,288,3.79,289,2.93,307,2.93,398,2.93,660,2.93,680,2.552,748,5.919,749,3.504,750,3.504,751,3.504,752,3.504,753,3.38,754,3.504,755,3.504,756,3.504,757,3.504,758,4.64,759,4.64,760,3.504,761,3.504,762,3.504,763,3.504,764,3.504,765,3.504,766,3.504,767,3.504,768,3.504,769,3.504,770,3.504,771,3.504,772,3.504,773,3.504,774,3.504]],["title/miscellaneous/functions.html",[775,1.765,776,3.262]],["body/miscellaneous/functions.html",[6,2.921,12,0.027,61,0.023,62,0.027,63,0.023,67,0.864,743,4.057,775,3.143,776,4.057,777,4.851]],["title/index.html",[67,0.485,422,1.765,423,1.765]],["body/index.html",[12,0.022,20,0.428,21,0.319,48,3.341,61,0.013,62,0.019,63,0.013,215,1.825,253,2.91,425,3.381,430,2.355,431,4.867,433,3.882,434,3.341,435,2.355,436,2.355,437,2.355,438,2.355,439,2.355,440,3.341,441,3.341,442,2.355,443,2.355,444,2.355,445,2.355,446,2.355,447,3.882,448,3.341,450,2.355,452,2.355,465,2.355,466,2.355,469,3.341,474,3.341,482,2.355,483,2.355,506,3.341,518,2.355,527,2.355,548,2.355,550,2.052,553,3.341,562,2.355,580,2.355,598,2.355,599,2.355,611,3.341,612,2.355,615,2.355,616,3.882,617,2.355,632,2.355,633,2.355,634,1.825,664,2.355,680,2.052,683,2.355,686,2.355,699,2.355,703,2.355,716,3.341,720,2.355,731,2.052,753,2.052,778,4.641,779,3.994,780,3.994,781,2.816,782,2.816,783,2.816,784,2.816,785,2.816,786,2.816,787,2.816,788,2.816,789,2.816,790,2.816,791,2.355,792,2.816,793,2.816,794,2.816,795,2.816,796,2.816,797,2.355,798,2.816,799,2.816,800,2.816,801,2.816,802,2.355,803,2.816,804,2.816,805,2.816,806,2.816,807,2.816,808,2.816,809,3.994,810,2.816,811,2.816,812,2.816,813,2.816]],["title/license.html",[422,1.765,423,1.765,634,1.765]],["body/license.html",[12,0.021,18,1.72,61,0.015,62,0.021,63,0.015,512,2.713,550,3.21,581,2.713,604,2.713,607,2.713,634,2.102,698,2.364,731,2.364,753,2.364,802,2.713,814,5.004,815,3.244,816,3.244,817,3.244,818,3.244,819,4.406,820,3.244,821,3.244,822,3.244,823,3.244,824,3.244,825,4.406,826,6.108,827,3.244,828,3.244,829,3.244,830,5.004,831,3.244,832,4.406,833,3.244,834,3.244,835,3.244,836,3.244,837,3.244,838,3.244,839,3.244,840,3.244,841,4.406,842,3.244,843,3.244,844,3.244,845,3.244,846,3.244,847,3.244,848,4.406,849,4.406,850,3.244,851,3.244,852,3.244,853,3.244,854,3.244,855,3.244,856,3.244,857,3.244,858,3.244,859,3.244,860,3.244,861,3.244,862,3.244,863,3.244,864,3.244,865,3.244,866,3.244,867,3.244,868,3.244,869,3.244,870,3.244,871,3.244,872,3.244,873,3.244,874,3.244,875,3.244,876,3.244]],["title/modules.html",[2,1.959]],["body/modules.html",[1,2.86,2,1.961,11,2.576,12,0.026,13,2.576,14,2.576,15,2.34,61,0.021,62,0.026,63,0.021,797,5.042,877,6.029,878,6.029,879,6.179,880,4.414,881,4.414]],["title/overview.html",[882,3.688]],["body/overview.html",[0,1.089,1,3.976,2,1.392,3,1.392,4,1.83,5,1.83,6,1.518,7,1.83,8,1.83,9,2.621,10,2.621,11,3.646,12,0.03,13,3.237,14,2.869,15,3.111,16,2.512,17,1.83,18,1.662,58,1.392,61,0.015,62,0.02,63,0.015,97,2.842,129,2.621,131,2.621,132,2.621,133,2.869,134,2.869,152,1.18,158,2.607,187,1.518,211,2.606,232,2.621,233,2.621,415,2.621,416,2.621,417,2.621,882,2.621,883,3.134,884,3.134,885,3.134,886,3.134]],["title/miscellaneous/variables.html",[775,1.765,887,3.262]],["body/miscellaneous/variables.html",[12,0.031,42,0.833,56,2.853,61,0.019,62,0.024,63,0.019,67,0.698,111,1.36,120,1.739,142,3.232,146,3.275,238,2.853,248,3.633,249,3.275,250,3.998,264,3.275,270,3.275,271,3.275,354,3.633,355,2.853,389,4.589,735,3.275,739,4.171,775,2.537,791,3.275,887,3.275,888,3.916,889,3.916,890,3.916,891,3.916,892,3.916,893,3.916,894,3.916,895,3.916]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"injectables/BoardService.html":{},"controllers/BoardsController.html":{},"modules/BoardsModule.html":{},"injectables/ClusterService.html":{},"injectables/GqlAuthGuard.html":{},"classes/Image.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/OauthTOken.html":{},"modules/TeamsModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":256,"title":{},"body":{"injectables/ClusterService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["0.2.24",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":737,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":740,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":742,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":741,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":744,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":390,"title":{},"body":{"injectables/UserService.html":{}}}],["15.0.0",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["2.13.1",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["2017",{"_index":816,"title":{},"body":{"license.html":{}}}],["3",{"_index":884,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["3.5.7",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["3600s",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{}}}],["4.0.0",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":883,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["5.1.2",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":886,"title":{},"body":{"overview.html":{}}}],["6.5.4",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":885,"title":{},"body":{"overview.html":{}}}],["above",{"_index":847,"title":{},"body":{"license.html":{}}}],["accept",{"_index":493,"title":{},"body":{"contributing.html":{}}}],["access",{"_index":699,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["access_token",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstoken",{"_index":313,"title":{},"body":{"classes/OauthTOken.html":{}}}],["accidentally",{"_index":594,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":870,"title":{},"body":{"license.html":{}}}],["actions",{"_index":445,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["add",{"_index":624,"title":{},"body":{"contributing.html":{}}}],["added",{"_index":622,"title":{},"body":{"contributing.html":{}}}],["additional",{"_index":673,"title":{},"body":{"contributing.html":{}}}],["address",{"_index":795,"title":{},"body":{"index.html":{}}}],["adhere",{"_index":439,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["adopted",{"_index":435,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["against",{"_index":485,"title":{},"body":{"contributing.html":{}}}],["agree",{"_index":640,"title":{},"body":{"contributing.html":{}}}],["agreement",{"_index":562,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["agrree",{"_index":631,"title":{},"body":{"contributing.html":{}}}],["airbnb's",{"_index":726,"title":{},"body":{"contributing.html":{}}}],["already",{"_index":394,"title":{},"body":{"injectables/UserService.html":{},"contributing.html":{}}}],["analyze",{"_index":693,"title":{},"body":{"contributing.html":{}}}],["and/or",{"_index":839,"title":{},"body":{"license.html":{}}}],["another",{"_index":637,"title":{},"body":{"contributing.html":{}}}],["api",{"_index":481,"title":{},"body":{"contributing.html":{}}}],["apidoc",{"_index":697,"title":{},"body":{"contributing.html":{}}}],["apidoc/index.html",{"_index":700,"title":{},"body":{"contributing.html":{}}}],["apollo",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["application",{"_index":483,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apt",{"_index":663,"title":{},"body":{"contributing.html":{}}}],["args",{"_index":350,"title":{},"body":{"classes/UserResolver.html":{}}}],["arising",{"_index":874,"title":{},"body":{"license.html":{}}}],["array",{"_index":364,"title":{},"body":{"classes/UserResolver.html":{}}}],["assistant.io/wipkanban/wipkanban",{"_index":813,"title":{},"body":{"index.html":{}}}],["associated",{"_index":827,"title":{},"body":{"license.html":{}}}],["async",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["aushaushauaushausha",{"_index":369,"title":{},"body":{"classes/UserResolver.html":{}}}],["auth.guard",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BoardsController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":280,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth/auth.module",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/jwt",{"_index":228,"title":{},"body":{"controllers/BoardsController.html":{}}}],["authcontroller",{"_index":65,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":266,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":269,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":301,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":11,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authors",{"_index":864,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":97,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["automatic",{"_index":717,"title":{},"body":{"contributing.html":{}}}],["autoschemafile",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":881,"title":{},"body":{"modules.html":{}}}],["await",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["away",{"_index":572,"title":{},"body":{"contributing.html":{}}}],["backend",{"_index":620,"title":{},"body":{"contributing.html":{}}}],["based",{"_index":782,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":398,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.comparesync(password",{"_index":408,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hashsync(password",{"_index":401,"title":{},"body":{"injectables/UserService.html":{}}}],["before",{"_index":535,"title":{},"body":{"contributing.html":{}}}],["best",{"_index":469,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["between",{"_index":799,"title":{},"body":{"index.html":{}}}],["board",{"_index":38,"title":{"classes/Board.html":{}},"body":{"modules/AppModule.html":{},"classes/Board.html":{},"injectables/BoardService.html":{},"modules/BoardsModule.html":{},"coverage.html":{}}}],["boardrepository",{"_index":217,"title":{},"body":{"injectables/BoardService.html":{}}}],["boards",{"_index":208,"title":{},"body":{"classes/Board.html":{},"controllers/BoardsController.html":{}}}],["boards/boards.module",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["boards/entities/board.entitie",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["boardscontroller",{"_index":223,"title":{"controllers/BoardsController.html":{}},"body":{"controllers/BoardsController.html":{},"modules/BoardsModule.html":{},"coverage.html":{}}}],["boardservice",{"_index":211,"title":{"injectables/BoardService.html":{}},"body":{"injectables/BoardService.html":{},"controllers/BoardsController.html":{},"modules/BoardsModule.html":{},"coverage.html":{},"overview.html":{}}}],["boardsmodule",{"_index":13,"title":{"modules/BoardsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BoardsModule.html":{},"modules.html":{},"overview.html":{}}}],["body",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["boolean",{"_index":324,"title":{},"body":{"classes/User.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":453,"title":{},"body":{"contributing.html":{}}}],["branch",{"_index":467,"title":{},"body":{"contributing.html":{}}}],["branches",{"_index":488,"title":{},"body":{"contributing.html":{}}}],["break",{"_index":713,"title":{},"body":{"contributing.html":{}}}],["breaking",{"_index":498,"title":{},"body":{"contributing.html":{}}}],["browse",{"_index":879,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":797,"title":{},"body":{"index.html":{},"modules.html":{}}}],["bug",{"_index":544,"title":{},"body":{"contributing.html":{}}}],["bugfixes",{"_index":506,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["bugs",{"_index":523,"title":{},"body":{"contributing.html":{}}}],["build",{"_index":664,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["bult",{"_index":784,"title":{},"body":{"index.html":{}}}],["bundle",{"_index":696,"title":{},"body":{"contributing.html":{}}}],["c",{"_index":815,"title":{},"body":{"license.html":{}}}],["callback",{"_index":244,"title":{},"body":{"injectables/ClusterService.html":{}}}],["called",{"_index":719,"title":{},"body":{"contributing.html":{}}}],["case",{"_index":549,"title":{},"body":{"contributing.html":{}}}],["cd",{"_index":788,"title":{},"body":{"index.html":{}}}],["change",{"_index":513,"title":{},"body":{"contributing.html":{}}}],["changelog",{"_index":424,"title":{"changelog.html":{}},"body":{"contributing.html":{}}}],["changes",{"_index":482,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["charge",{"_index":822,"title":{},"body":{"license.html":{}}}],["check",{"_index":585,"title":{},"body":{"contributing.html":{}}}],["cherry",{"_index":495,"title":{},"body":{"contributing.html":{}}}],["cla",{"_index":632,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["claim",{"_index":867,"title":{},"body":{"license.html":{}}}],["claims",{"_index":596,"title":{},"body":{"contributing.html":{}}}],["class",{"_index":60,"title":{"classes/Board.html":{},"classes/Image.html":{},"classes/OauthTOken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserResolver.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"injectables/BoardService.html":{},"controllers/BoardsController.html":{},"modules/BoardsModule.html":{},"injectables/ClusterService.html":{},"injectables/GqlAuthGuard.html":{},"classes/Image.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/OauthTOken.html":{},"modules/TeamsModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["classes",{"_index":187,"title":{},"body":{"classes/Board.html":{},"classes/Image.html":{},"classes/OauthTOken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserResolver.html":{},"overview.html":{}}}],["clear",{"_index":531,"title":{},"body":{"contributing.html":{}}}],["client",{"_index":800,"title":{},"body":{"index.html":{}}}],["clone",{"_index":786,"title":{},"body":{"index.html":{}}}],["cloning",{"_index":688,"title":{},"body":{"contributing.html":{}}}],["close",{"_index":528,"title":{},"body":{"contributing.html":{}}}],["cluster",{"_index":246,"title":{},"body":{"injectables/ClusterService.html":{}}}],["cluster.ismaster",{"_index":251,"title":{},"body":{"injectables/ClusterService.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_boardsmodule",{"_index":232,"title":{},"body":{"modules/BoardsModule.html":{},"overview.html":{}}}],["cluster_boardsmodule_providers",{"_index":233,"title":{},"body":{"modules/BoardsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":415,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":416,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":417,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["clusterize",{"_index":240,"title":{},"body":{"injectables/ClusterService.html":{}}}],["clusterize(callback",{"_index":241,"title":{},"body":{"injectables/ClusterService.html":{}}}],["clusterservice",{"_index":237,"title":{"injectables/ClusterService.html":{}},"body":{"injectables/ClusterService.html":{},"coverage.html":{}}}],["code",{"_index":433,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["column",{"_index":205,"title":{},"body":{"classes/Board.html":{},"classes/Image.html":{},"classes/User.html":{}}}],["comfortable",{"_index":649,"title":{},"body":{"contributing.html":{}}}],["command",{"_index":658,"title":{},"body":{"contributing.html":{}}}],["commands",{"_index":669,"title":{},"body":{"contributing.html":{}}}],["comment",{"_index":586,"title":{},"body":{"contributing.html":{}}}],["community",{"_index":808,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":484,"title":{},"body":{"contributing.html":{}}}],["compilation",{"_index":654,"title":{},"body":{"contributing.html":{}}}],["compiler",{"_index":651,"title":{},"body":{"contributing.html":{}}}],["complete",{"_index":618,"title":{},"body":{"contributing.html":{}}}],["conditions",{"_index":846,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":434,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["configmodule",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmpassword",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserDto.html":{}}}],["connection",{"_index":875,"title":{},"body":{"license.html":{}}}],["console.log(`master",{"_index":252,"title":{},"body":{"injectables/ClusterService.html":{}}}],["console.log(`worker",{"_index":257,"title":{},"body":{"injectables/ClusterService.html":{}}}],["console.log(user",{"_index":363,"title":{},"body":{"classes/UserResolver.html":{}}}],["const",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ClusterService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constructor",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/OauthTOken.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["constructor(accesstoken",{"_index":314,"title":{},"body":{"classes/OauthTOken.html":{}}}],["constructor(authservice",{"_index":303,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(boardrepository",{"_index":214,"title":{},"body":{"injectables/BoardService.html":{}}}],["constructor(private",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BoardsController.html":{},"injectables/LocalStrategy.html":{},"classes/UserResolver.html":{},"controllers/UsersController.html":{}}}],["constructor(userrepository",{"_index":376,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":339,"title":{},"body":{"classes/UserResolver.html":{}}}],["constructor(usersservice",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["contains",{"_index":710,"title":{},"body":{"contributing.html":{}}}],["context",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"injectables/GqlAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":803,"title":{},"body":{"index.html":{}}}],["contract",{"_index":871,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":430,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["contributing",{"_index":425,"title":{"contributing.html":{}},"body":{"contributing.html":{},"index.html":{}}}],["contribution",{"_index":643,"title":{},"body":{"contributing.html":{}}}],["contributions",{"_index":728,"title":{},"body":{"contributing.html":{}}}],["contributor",{"_index":633,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["contributors",{"_index":458,"title":{},"body":{"contributing.html":{}}}],["controller",{"_index":64,"title":{"controllers/AuthController.html":{},"controllers/BoardsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/BoardsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller(\"/boards",{"_index":230,"title":{},"body":{"controllers/BoardsController.html":{}}}],["controller('/users",{"_index":414,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BoardsController.html":{},"modules/BoardsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["controllers/auth.controller",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["controllers/board.controller",{"_index":235,"title":{},"body":{"modules/BoardsModule.html":{}}}],["controllers/users.controller",{"_index":419,"title":{},"body":{"modules/UsersModule.html":{}}}],["copies",{"_index":841,"title":{},"body":{"license.html":{}}}],["copy",{"_index":825,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":814,"title":{},"body":{"license.html":{}}}],["core",{"_index":454,"title":{},"body":{"contributing.html":{}}}],["cover",{"_index":661,"title":{},"body":{"contributing.html":{}}}],["coverage",{"_index":732,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":610,"title":{},"body":{"contributing.html":{}}}],["createdat",{"_index":190,"title":{},"body":{"classes/Board.html":{}}}],["createparamdecorator",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":705,"title":{},"body":{"contributing.html":{}}}],["cross",{"_index":641,"title":{},"body":{"contributing.html":{}}}],["ctx",{"_index":270,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["ctx.getcontext().req",{"_index":272,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["ctx.getcontext().req.user",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentuser",{"_index":354,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":868,"title":{},"body":{"license.html":{}}}],["data",{"_index":791,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["date",{"_index":193,"title":{},"body":{"classes/Board.html":{}}}],["deal",{"_index":829,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":876,"title":{},"body":{"license.html":{}}}],["decide",{"_index":584,"title":{},"body":{"contributing.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"classes/Board.html":{},"controllers/BoardsController.html":{},"classes/Image.html":{},"classes/OauthTOken.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":250,"title":{},"body":{"injectables/ClusterService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"injectables/BoardService.html":{},"controllers/BoardsController.html":{},"injectables/ClusterService.html":{},"injectables/GqlAuthGuard.html":{},"classes/Image.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/OauthTOken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["dependences",{"_index":703,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardsModule.html":{},"modules/UsersModule.html":{},"contributing.html":{},"dependencies.html":{},"overview.html":{}}}],["detailing",{"_index":574,"title":{},"body":{"contributing.html":{}}}],["details",{"_index":679,"title":{},"body":{"contributing.html":{}}}],["development",{"_index":448,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["died",{"_index":259,"title":{},"body":{"injectables/ClusterService.html":{}}}],["direction",{"_index":727,"title":{},"body":{"contributing.html":{}}}],["directly",{"_index":451,"title":{},"body":{"contributing.html":{}}}],["distribute",{"_index":837,"title":{},"body":{"license.html":{}}}],["distros",{"_index":671,"title":{},"body":{"contributing.html":{}}}],["divided",{"_index":798,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":698,"title":{},"body":{"contributing.html":{},"coverage.html":{},"license.html":{}}}],["documented",{"_index":522,"title":{},"body":{"contributing.html":{}}}],["doesn't",{"_index":540,"title":{},"body":{"contributing.html":{}}}],["don't",{"_index":492,"title":{},"body":{"contributing.html":{}}}],["done",{"_index":608,"title":{},"body":{"contributing.html":{}}}],["download",{"_index":785,"title":{},"body":{"index.html":{}}}],["dto/user.dto",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["duplicate",{"_index":595,"title":{},"body":{"contributing.html":{}}}],["ecossystem",{"_index":684,"title":{},"body":{"contributing.html":{}}}],["effort",{"_index":565,"title":{},"body":{"contributing.html":{}}}],["email",{"_index":320,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{}}}],["ensure",{"_index":625,"title":{},"body":{"contributing.html":{}}}],["enter",{"_index":794,"title":{},"body":{"index.html":{}}}],["entities",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["entities/board.entitie",{"_index":220,"title":{},"body":{"injectables/BoardService.html":{},"modules/BoardsModule.html":{}}}],["entities/oauth",{"_index":357,"title":{},"body":{"classes/UserResolver.html":{}}}],["entities/user.entity",{"_index":352,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{}}}],["entity",{"_index":203,"title":{},"body":{"classes/Board.html":{},"classes/User.html":{}}}],["env",{"_index":616,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["equals",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["essential",{"_index":665,"title":{},"body":{"contributing.html":{}}}],["event",{"_index":863,"title":{},"body":{"license.html":{}}}],["evolve",{"_index":804,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":264,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":541,"title":{},"body":{"contributing.html":{}}}],["exists",{"_index":395,"title":{},"body":{"injectables/UserService.html":{}}}],["expect",{"_index":436,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["experience",{"_index":806,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{}}}],["explanation",{"_index":605,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"injectables/BoardService.html":{},"controllers/BoardsController.html":{},"modules/BoardsModule.html":{},"injectables/ClusterService.html":{},"injectables/GqlAuthGuard.html":{},"classes/Image.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/OauthTOken.html":{},"modules/TeamsModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":753,"title":{},"body":{"dependencies.html":{},"index.html":{},"license.html":{}}}],["expressjs",{"_index":685,"title":{},"body":{"contributing.html":{}}}],["extends",{"_index":268,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["external",{"_index":457,"title":{},"body":{"contributing.html":{}}}],["extractjwt",{"_index":286,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":294,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["eye",{"_index":529,"title":{},"body":{"contributing.html":{}}}],["false",{"_index":296,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["familiar",{"_index":682,"title":{},"body":{"contributing.html":{}}}],["fast",{"_index":479,"title":{},"body":{"contributing.html":{}}}],["features",{"_index":508,"title":{},"body":{"contributing.html":{}}}],["fetch",{"_index":689,"title":{},"body":{"contributing.html":{}}}],["few",{"_index":515,"title":{},"body":{"contributing.html":{}}}],["field",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"classes/Board.html":{},"classes/Image.html":{},"classes/OauthTOken.html":{},"classes/User.html":{}}}],["field()@column",{"_index":194,"title":{},"body":{"classes/Board.html":{},"classes/Image.html":{},"classes/User.html":{}}}],["field(type",{"_index":209,"title":{},"body":{"classes/Board.html":{},"classes/User.html":{}}}],["field({nullable",{"_index":199,"title":{},"body":{"classes/Board.html":{},"classes/User.html":{}}}],["file",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"injectables/BoardService.html":{},"controllers/BoardsController.html":{},"modules/BoardsModule.html":{},"injectables/ClusterService.html":{},"injectables/GqlAuthGuard.html":{},"classes/Image.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/OauthTOken.html":{},"modules/TeamsModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"contributing.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":828,"title":{},"body":{"license.html":{}}}],["filing",{"_index":536,"title":{},"body":{"contributing.html":{}}}],["fill",{"_index":790,"title":{},"body":{"index.html":{}}}],["find",{"_index":524,"title":{},"body":{"contributing.html":{}}}],["findall",{"_index":213,"title":{},"body":{"injectables/BoardService.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":372,"title":{},"body":{"injectables/UserService.html":{}}}],["findone(id",{"_index":380,"title":{},"body":{"injectables/UserService.html":{}}}],["finduserbyandpassword",{"_index":373,"title":{},"body":{"injectables/UserService.html":{}}}],["finduserbyandpassword(email",{"_index":382,"title":{},"body":{"injectables/UserService.html":{}}}],["fine",{"_index":569,"title":{},"body":{"contributing.html":{}}}],["first",{"_index":426,"title":{},"body":{"contributing.html":{}}}],["firstaccess",{"_index":321,"title":{},"body":{"classes/User.html":{}}}],["fitness",{"_index":860,"title":{},"body":{"license.html":{}}}],["fix",{"_index":533,"title":{},"body":{"contributing.html":{}}}],["fixed",{"_index":545,"title":{},"body":{"contributing.html":{}}}],["fixing",{"_index":567,"title":{},"body":{"contributing.html":{}}}],["folder",{"_index":706,"title":{},"body":{"contributing.html":{}}}],["follow",{"_index":597,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":607,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["follows",{"_index":503,"title":{},"body":{"contributing.html":{}}}],["fork",{"_index":609,"title":{},"body":{"contributing.html":{}}}],["format",{"_index":628,"title":{},"body":{"contributing.html":{}}}],["formatter",{"_index":718,"title":{},"body":{"contributing.html":{}}}],["free",{"_index":581,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["frontend",{"_index":692,"title":{},"body":{"contributing.html":{}}}],["full",{"_index":442,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["function",{"_index":242,"title":{},"body":{"injectables/ClusterService.html":{},"coverage.html":{}}}],["functionality",{"_index":712,"title":{},"body":{"contributing.html":{}}}],["functions",{"_index":776,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":844,"title":{},"body":{"license.html":{}}}],["future",{"_index":714,"title":{},"body":{"contributing.html":{}}}],["gcc",{"_index":648,"title":{},"body":{"contributing.html":{}}}],["generate",{"_index":694,"title":{},"body":{"contributing.html":{}}}],["get('profile",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BoardsController.html":{}}}],["getprofile(@request",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BoardsController.html":{}}}],["getprofile(req",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BoardsController.html":{}}}],["getrequest",{"_index":262,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["getrequest(context",{"_index":263,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["getting",{"_index":422,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["getusers",{"_index":412,"title":{},"body":{"controllers/UsersController.html":{}}}],["git",{"_index":686,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["github",{"_index":452,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["go",{"_index":462,"title":{},"body":{"contributing.html":{}}}],["good",{"_index":472,"title":{},"body":{"contributing.html":{}}}],["gqlauthguard",{"_index":260,"title":{"injectables/GqlAuthGuard.html":{}},"body":{"injectables/GqlAuthGuard.html":{},"classes/UserResolver.html":{},"coverage.html":{}}}],["gqlexecutioncontext",{"_index":267,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["gqlexecutioncontext.create(context",{"_index":271,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["granted",{"_index":821,"title":{},"body":{"license.html":{}}}],["graph",{"_index":880,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["graphqlmodule",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forroot",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["grateful",{"_index":807,"title":{},"body":{"index.html":{}}}],["great",{"_index":552,"title":{},"body":{"contributing.html":{}}}],["guards/jwt",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/local",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["guide",{"_index":716,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["gyp",{"_index":676,"title":{},"body":{"contributing.html":{}}}],["happens",{"_index":450,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["happy",{"_index":428,"title":{},"body":{"contributing.html":{}}}],["hash",{"_index":400,"title":{},"body":{"injectables/UserService.html":{}}}],["haven't",{"_index":630,"title":{},"body":{"contributing.html":{}}}],["helpful",{"_index":575,"title":{},"body":{"contributing.html":{}}}],["here",{"_index":642,"title":{},"body":{"contributing.html":{}}}],["hereby",{"_index":820,"title":{},"body":{"license.html":{}}}],["holders",{"_index":865,"title":{},"body":{"license.html":{}}}],["host",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["hosts",{"_index":792,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.created",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["httpexception(\"the",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception(result",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://cla",{"_index":812,"title":{},"body":{"index.html":{}}}],["https://github.com/wipkanban/wipkanbaninstall",{"_index":787,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["httpstatus.not_acceptable",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["htts://:3000",{"_index":796,"title":{},"body":{"index.html":{}}}],["id",{"_index":191,"title":{},"body":{"classes/Board.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":733,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":295,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":273,"title":{"classes/Image.html":{}},"body":{"classes/Image.html":{},"classes/User.html":{},"coverage.html":{}}}],["image.entity",{"_index":331,"title":{},"body":{"classes/User.html":{}}}],["implementation",{"_index":557,"title":{},"body":{"contributing.html":{}}}],["implied",{"_index":856,"title":{},"body":{"license.html":{}}}],["import",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"injectables/BoardService.html":{},"controllers/BoardsController.html":{},"modules/BoardsModule.html":{},"injectables/ClusterService.html":{},"injectables/GqlAuthGuard.html":{},"classes/Image.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/OauthTOken.html":{},"modules/TeamsModule.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["imports",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardsModule.html":{},"modules/UsersModule.html":{}}}],["improvements",{"_index":809,"title":{},"body":{"index.html":{}}}],["included",{"_index":850,"title":{},"body":{"license.html":{}}}],["including",{"_index":832,"title":{},"body":{"license.html":{}}}],["index",{"_index":67,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"injectables/BoardService.html":{},"controllers/BoardsController.html":{},"injectables/ClusterService.html":{},"injectables/GqlAuthGuard.html":{},"classes/Image.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/OauthTOken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"injectables/BoardService.html":{},"controllers/BoardsController.html":{},"modules/BoardsModule.html":{},"injectables/ClusterService.html":{},"injectables/GqlAuthGuard.html":{},"classes/Image.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/OauthTOken.html":{},"modules/TeamsModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["injectable",{"_index":151,"title":{"injectables/AuthService.html":{},"injectables/BoardService.html":{},"injectables/ClusterService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{},"injectables/ClusterService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{},"injectables/ClusterService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":219,"title":{},"body":{"injectables/BoardService.html":{},"injectables/UserService.html":{}}}],["injectrepository(board",{"_index":221,"title":{},"body":{"injectables/BoardService.html":{}}}],["injectrepository(user",{"_index":391,"title":{},"body":{"injectables/UserService.html":{}}}],["install",{"_index":613,"title":{},"body":{"contributing.html":{}}}],["installation",{"_index":677,"title":{},"body":{"contributing.html":{}}}],["installed",{"_index":646,"title":{},"body":{"contributing.html":{}}}],["installing",{"_index":650,"title":{},"body":{"contributing.html":{}}}],["instead",{"_index":494,"title":{},"body":{"contributing.html":{}}}],["instructions",{"_index":678,"title":{},"body":{"contributing.html":{}}}],["intend",{"_index":555,"title":{},"body":{"contributing.html":{}}}],["internal",{"_index":532,"title":{},"body":{"contributing.html":{}}}],["introduce",{"_index":708,"title":{},"body":{"contributing.html":{}}}],["ispasswordmatching",{"_index":407,"title":{},"body":{"injectables/UserService.html":{}}}],["issue",{"_index":559,"title":{},"body":{"contributing.html":{}}}],["issues",{"_index":526,"title":{},"body":{"contributing.html":{}}}],["it's",{"_index":568,"title":{},"body":{"contributing.html":{}}}],["jsfiddle",{"_index":551,"title":{},"body":{"contributing.html":{}}}],["jwt",{"_index":289,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":102,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"controllers/BoardsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":293,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":133,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kanban",{"_index":778,"title":{},"body":{"index.html":{}}}],["keep",{"_index":470,"title":{},"body":{"contributing.html":{}}}],["kind",{"_index":855,"title":{},"body":{"license.html":{}}}],["know",{"_index":639,"title":{},"body":{"contributing.html":{}}}],["known",{"_index":525,"title":{},"body":{"contributing.html":{}}}],["label",{"_index":510,"title":{},"body":{"contributing.html":{}}}],["lastname",{"_index":322,"title":{},"body":{"classes/User.html":{}}}],["latest",{"_index":499,"title":{},"body":{"contributing.html":{}}}],["lean",{"_index":779,"title":{},"body":{"index.html":{}}}],["learn",{"_index":580,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["leave",{"_index":591,"title":{},"body":{"contributing.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["lets",{"_index":560,"title":{},"body":{"contributing.html":{}}}],["liability",{"_index":869,"title":{},"body":{"license.html":{}}}],["liable",{"_index":866,"title":{},"body":{"license.html":{}}}],["license",{"_index":634,"title":{"license.html":{}},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["licensed",{"_index":729,"title":{},"body":{"contributing.html":{}}}],["limitation",{"_index":833,"title":{},"body":{"license.html":{}}}],["limited",{"_index":857,"title":{},"body":{"license.html":{}}}],["line",{"_index":659,"title":{},"body":{"contributing.html":{}}}],["linter",{"_index":722,"title":{},"body":{"contributing.html":{}}}],["linux",{"_index":670,"title":{},"body":{"contributing.html":{}}}],["local",{"_index":307,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":99,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":134,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["logging",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserResolver.html":{}}}],["login(@request",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(username",{"_index":341,"title":{},"body":{"classes/UserResolver.html":{}}}],["looking",{"_index":725,"title":{},"body":{"contributing.html":{}}}],["main",{"_index":801,"title":{},"body":{"index.html":{}}}],["maintain",{"_index":486,"title":{},"body":{"contributing.html":{}}}],["major",{"_index":489,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":480,"title":{},"body":{"contributing.html":{}}}],["making",{"_index":720,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["management",{"_index":780,"title":{},"body":{"index.html":{}}}],["marking",{"_index":511,"title":{},"body":{"contributing.html":{}}}],["master",{"_index":471,"title":{},"body":{"contributing.html":{}}}],["matching",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"injectables/BoardService.html":{},"controllers/BoardsController.html":{},"modules/BoardsModule.html":{},"injectables/ClusterService.html":{},"injectables/GqlAuthGuard.html":{},"classes/Image.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/OauthTOken.html":{},"modules/TeamsModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["members",{"_index":456,"title":{},"body":{"contributing.html":{}}}],["merchantability",{"_index":859,"title":{},"body":{"license.html":{}}}],["merge",{"_index":604,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["metadata",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BoardService.html":{},"controllers/BoardsController.html":{},"injectables/ClusterService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["minor",{"_index":507,"title":{},"body":{"contributing.html":{}}}],["miscellaneous",{"_index":775,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":731,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["modify",{"_index":835,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardsModule.html":{},"modules/TeamsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardsModule.html":{},"modules/TeamsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardsModule.html":{},"modules/TeamsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":590,"title":{},"body":{"contributing.html":{}}}],["mongodb",{"_index":680,"title":{},"body":{"contributing.html":{},"dependencies.html":{},"index.html":{}}}],["monitoring",{"_index":603,"title":{},"body":{"contributing.html":{}}}],["months",{"_index":517,"title":{},"body":{"contributing.html":{}}}],["more",{"_index":599,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["motivation",{"_index":781,"title":{},"body":{"index.html":{}}}],["move",{"_index":478,"title":{},"body":{"contributing.html":{}}}],["mutation",{"_index":349,"title":{},"body":{"classes/UserResolver.html":{}}}],["mutation(returns",{"_index":366,"title":{},"body":{"classes/UserResolver.html":{}}}],["mutation(undefined",{"_index":342,"title":{},"body":{"classes/UserResolver.html":{}}}],["name",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"injectables/BoardService.html":{},"controllers/BoardsController.html":{},"injectables/ClusterService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/OauthTOken.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["necessary",{"_index":619,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":635,"title":{},"body":{"contributing.html":{}}}],["needed",{"_index":652,"title":{},"body":{"contributing.html":{}}}],["nestjs/common",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BoardService.html":{},"controllers/BoardsController.html":{},"modules/BoardsModule.html":{},"injectables/ClusterService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/TeamsModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"classes/Board.html":{},"injectables/GqlAuthGuard.html":{},"classes/Image.html":{},"classes/OauthTOken.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"injectables/BoardService.html":{},"modules/BoardsModule.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["new",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"contributing.html":{},"coverage.html":{}}}],["newfilename",{"_index":275,"title":{},"body":{"classes/Image.html":{}}}],["newman",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["next",{"_index":514,"title":{},"body":{"contributing.html":{}}}],["nobody",{"_index":589,"title":{},"body":{"contributing.html":{}}}],["node",{"_index":645,"title":{},"body":{"contributing.html":{}}}],["non",{"_index":497,"title":{},"body":{"contributing.html":{}}}],["noninfringement",{"_index":862,"title":{},"body":{"license.html":{}}}],["notice",{"_index":848,"title":{},"body":{"license.html":{}}}],["null",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["nullable",{"_index":210,"title":{},"body":{"classes/Board.html":{},"classes/User.html":{}}}],["number",{"_index":388,"title":{},"body":{"injectables/UserService.html":{}}}],["numcpus",{"_index":248,"title":{},"body":{"injectables/ClusterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["oauthtoken",{"_index":310,"title":{"classes/OauthTOken.html":{}},"body":{"classes/OauthTOken.html":{},"classes/UserResolver.html":{},"coverage.html":{}}}],["oauthtoken.accesstoken",{"_index":368,"title":{},"body":{"classes/UserResolver.html":{}}}],["object",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objectid",{"_index":196,"title":{},"body":{"classes/Board.html":{},"classes/User.html":{}}}],["objectidcolumn",{"_index":204,"title":{},"body":{"classes/Board.html":{},"classes/User.html":{}}}],["objectidcolumn()@field(undefined",{"_index":197,"title":{},"body":{"classes/Board.html":{},"classes/User.html":{}}}],["objecttype",{"_index":207,"title":{},"body":{"classes/Board.html":{},"classes/Image.html":{},"classes/OauthTOken.html":{},"classes/User.html":{}}}],["obtaining",{"_index":824,"title":{},"body":{"license.html":{}}}],["once",{"_index":636,"title":{},"body":{"contributing.html":{}}}],["one",{"_index":518,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["open",{"_index":447,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["optional",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BoardService.html":{},"controllers/BoardsController.html":{},"injectables/ClusterService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/OauthTOken.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["order",{"_index":477,"title":{},"body":{"contributing.html":{}}}],["organization",{"_index":468,"title":{},"body":{"contributing.html":{}}}],["originalname",{"_index":276,"title":{},"body":{"classes/Image.html":{}}}],["os",{"_index":247,"title":{},"body":{"injectables/ClusterService.html":{},"contributing.html":{}}}],["os.cpus().length",{"_index":249,"title":{},"body":{"injectables/ClusterService.html":{},"miscellaneous/variables.html":{}}}],["others",{"_index":793,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":873,"title":{},"body":{"license.html":{}}}],["out",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardsModule.html":{},"modules/UsersModule.html":{},"license.html":{},"overview.html":{}}}],["outdated",{"_index":701,"title":{},"body":{"contributing.html":{}}}],["over",{"_index":601,"title":{},"body":{"contributing.html":{}}}],["overview",{"_index":882,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":747,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":667,"title":{},"body":{"contributing.html":{}}}],["param",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["parameters",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BoardService.html":{},"controllers/BoardsController.html":{},"injectables/ClusterService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/OauthTOken.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["participants",{"_index":438,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["particular",{"_index":861,"title":{},"body":{"license.html":{}}}],["pass",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["passes",{"_index":627,"title":{},"body":{"contributing.html":{}}}],["passing",{"_index":475,"title":{},"body":{"contributing.html":{}}}],["passport",{"_index":288,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":290,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":291,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["patch",{"_index":505,"title":{},"body":{"contributing.html":{}}}],["payload",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":298,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":299,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["people",{"_index":593,"title":{},"body":{"contributing.html":{}}}],["permission",{"_index":819,"title":{},"body":{"license.html":{}}}],["permit",{"_index":842,"title":{},"body":{"license.html":{}}}],["person",{"_index":823,"title":{},"body":{"license.html":{}}}],["persons",{"_index":843,"title":{},"body":{"license.html":{}}}],["pick",{"_index":496,"title":{},"body":{"contributing.html":{}}}],["please",{"_index":440,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["port",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["portions",{"_index":852,"title":{},"body":{"license.html":{}}}],["possible",{"_index":805,"title":{},"body":{"index.html":{}}}],["post",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('auth/login",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('auth/register",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('auth/register')@httpcode(httpstatus.created",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":225,"title":{},"body":{"controllers/BoardsController.html":{},"controllers/UsersController.html":{}}}],["prerequisites",{"_index":644,"title":{},"body":{"contributing.html":{}}}],["present",{"_index":817,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":629,"title":{},"body":{"contributing.html":{}}}],["private",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{},"injectables/UserService.html":{}}}],["problem",{"_index":539,"title":{},"body":{"contributing.html":{}}}],["process",{"_index":466,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["process.env.database",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.driver_db",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.host_db",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.port_db",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["process.pid",{"_index":254,"title":{},"body":{"injectables/ClusterService.html":{}}}],["production",{"_index":707,"title":{},"body":{"contributing.html":{}}}],["progress",{"_index":534,"title":{},"body":{"contributing.html":{}}}],["project",{"_index":437,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["promise",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":189,"title":{},"body":{"classes/Board.html":{},"classes/Image.html":{},"classes/OauthTOken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{}}}],["proposal",{"_index":563,"title":{},"body":{"contributing.html":{}}}],["propose",{"_index":810,"title":{},"body":{"index.html":{}}}],["proposing",{"_index":554,"title":{},"body":{"contributing.html":{}}}],["provide",{"_index":546,"title":{},"body":{"contributing.html":{}}}],["provided",{"_index":853,"title":{},"body":{"license.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"classes/OauthTOken.html":{},"classes/UserDto.html":{},"classes/UserResolver.html":{},"controllers/UsersController.html":{},"contributing.html":{}}}],["publish",{"_index":836,"title":{},"body":{"license.html":{}}}],["pull",{"_index":460,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":802,"title":{},"body":{"index.html":{},"license.html":{}}}],["put",{"_index":564,"title":{},"body":{"contributing.html":{}}}],["query",{"_index":348,"title":{},"body":{"classes/UserResolver.html":{}}}],["query(returns",{"_index":361,"title":{},"body":{"classes/UserResolver.html":{}}}],["reach",{"_index":561,"title":{},"body":{"contributing.html":{}}}],["reactjs",{"_index":683,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["read",{"_index":441,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["recommend",{"_index":558,"title":{},"body":{"contributing.html":{}}}],["reduced",{"_index":547,"title":{},"body":{"contributing.html":{}}}],["reflect",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["registeruser",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registeruser(@body",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["registeruser(userdto",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["regressions",{"_index":709,"title":{},"body":{"contributing.html":{}}}],["release",{"_index":504,"title":{},"body":{"contributing.html":{}}}],["remove",{"_index":374,"title":{},"body":{"injectables/UserService.html":{}}}],["remove(id",{"_index":384,"title":{},"body":{"injectables/UserService.html":{}}}],["rename",{"_index":615,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["reporting",{"_index":542,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":215,"title":{},"body":{"injectables/BoardService.html":{},"injectables/UserService.html":{},"contributing.html":{},"index.html":{}}}],["req",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/BoardsController.html":{}}}],["req.user",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BoardsController.html":{},"contributing.html":{}}}],["requests",{"_index":461,"title":{},"body":{"contributing.html":{}}}],["require",{"_index":653,"title":{},"body":{"contributing.html":{}}}],["require('bcrypt",{"_index":399,"title":{},"body":{"injectables/UserService.html":{}}}],["required",{"_index":666,"title":{},"body":{"contributing.html":{}}}],["reset",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolver",{"_index":347,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolver('users",{"_index":359,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers/user.resolver",{"_index":420,"title":{},"body":{"modules/UsersModule.html":{}}}],["restriction",{"_index":831,"title":{},"body":{"license.html":{}}}],["result",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"injectables/BoardService.html":{},"controllers/BoardsController.html":{},"modules/BoardsModule.html":{},"injectables/ClusterService.html":{},"injectables/GqlAuthGuard.html":{},"classes/Image.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/OauthTOken.html":{},"modules/TeamsModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"injectables/BoardService.html":{},"controllers/BoardsController.html":{},"modules/BoardsModule.html":{},"injectables/ClusterService.html":{},"injectables/GqlAuthGuard.html":{},"classes/Image.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/OauthTOken.html":{},"modules/TeamsModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BoardService.html":{},"controllers/BoardsController.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BoardService.html":{},"controllers/BoardsController.html":{},"injectables/ClusterService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["review",{"_index":465,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["right",{"_index":571,"title":{},"body":{"contributing.html":{}}}],["rights",{"_index":834,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":614,"title":{},"body":{"contributing.html":{}}}],["run",{"_index":611,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["running",{"_index":255,"title":{},"body":{"injectables/ClusterService.html":{},"contributing.html":{}}}],["runs",{"_index":691,"title":{},"body":{"contributing.html":{}}}],["rxjs",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":371,"title":{},"body":{"injectables/UserService.html":{}}}],["same",{"_index":464,"title":{},"body":{"contributing.html":{}}}],["save",{"_index":375,"title":{},"body":{"injectables/UserService.html":{}}}],["save(email",{"_index":386,"title":{},"body":{"injectables/UserService.html":{}}}],["secret",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["secretkey",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":297,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["see",{"_index":675,"title":{},"body":{"contributing.html":{}}}],["sell",{"_index":840,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":501,"title":{},"body":{"contributing.html":{}}}],["send",{"_index":459,"title":{},"body":{"contributing.html":{}}}],["sending",{"_index":602,"title":{},"body":{"contributing.html":{}}}],["separately",{"_index":491,"title":{},"body":{"contributing.html":{}}}],["series",{"_index":583,"title":{},"body":{"contributing.html":{}}}],["server",{"_index":253,"title":{},"body":{"injectables/ClusterService.html":{},"dependencies.html":{},"index.html":{}}}],["services/auth.service",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["services/board.service",{"_index":229,"title":{},"body":{"controllers/BoardsController.html":{},"modules/BoardsModule.html":{}}}],["services/user.service",{"_index":351,"title":{},"body":{"classes/UserResolver.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["several",{"_index":690,"title":{},"body":{"contributing.html":{}}}],["shall",{"_index":849,"title":{},"body":{"license.html":{}}}],["shape",{"_index":473,"title":{},"body":{"contributing.html":{}}}],["sign",{"_index":811,"title":{},"body":{"index.html":{}}}],["significant",{"_index":521,"title":{},"body":{"contributing.html":{}}}],["signoptions",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{}}}],["similar",{"_index":668,"title":{},"body":{"contributing.html":{}}}],["software",{"_index":826,"title":{},"body":{"license.html":{}}}],["somebody",{"_index":588,"title":{},"body":{"contributing.html":{}}}],["something",{"_index":724,"title":{},"body":{"contributing.html":{}}}],["source",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"injectables/BoardService.html":{},"controllers/BoardsController.html":{},"modules/BoardsModule.html":{},"injectables/ClusterService.html":{},"injectables/GqlAuthGuard.html":{},"classes/Image.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/OauthTOken.html":{},"modules/TeamsModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"contributing.html":{},"index.html":{}}}],["specific",{"_index":576,"title":{},"body":{"contributing.html":{}}}],["src/.../cluster.service.ts",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../current",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":777,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.module.ts",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/constants.ts",{"_index":735,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/controllers/auth.controller.ts",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/controllers/auth.controller.ts:15",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controllers/auth.controller.ts:21",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controllers/auth.controller.ts:27",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/decorators/current",{"_index":355,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/user.dto.ts",{"_index":333,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/auth/dto/user.dto.ts:2",{"_index":335,"title":{},"body":{"classes/UserDto.html":{}}}],["src/auth/dto/user.dto.ts:3",{"_index":336,"title":{},"body":{"classes/UserDto.html":{}}}],["src/auth/dto/user.dto.ts:4",{"_index":334,"title":{},"body":{"classes/UserDto.html":{}}}],["src/auth/guards/gql.auth.guard",{"_index":353,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/auth/guards/gql.auth.guard.ts",{"_index":261,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/gql.auth.guard.ts:7",{"_index":265,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["src/auth/guards/jwt",{"_index":279,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/auth/guards/local",{"_index":300,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/services/auth.service.ts",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/services/auth.service.ts:13",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:23",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:30",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:7",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":281,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:16",{"_index":285,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:7",{"_index":283,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":302,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:12",{"_index":306,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:7",{"_index":304,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/boards/boards.module.ts",{"_index":234,"title":{},"body":{"modules/BoardsModule.html":{}}}],["src/boards/controllers/board.controller.ts",{"_index":224,"title":{},"body":{"controllers/BoardsController.html":{},"coverage.html":{}}}],["src/boards/controllers/board.controller.ts:11",{"_index":227,"title":{},"body":{"controllers/BoardsController.html":{}}}],["src/boards/entities/board.entitie.ts",{"_index":188,"title":{},"body":{"classes/Board.html":{},"coverage.html":{}}}],["src/boards/entities/board.entitie.ts:10",{"_index":198,"title":{},"body":{"classes/Board.html":{}}}],["src/boards/entities/board.entitie.ts:14",{"_index":201,"title":{},"body":{"classes/Board.html":{}}}],["src/boards/entities/board.entitie.ts:18",{"_index":202,"title":{},"body":{"classes/Board.html":{}}}],["src/boards/entities/board.entitie.ts:22",{"_index":195,"title":{},"body":{"classes/Board.html":{}}}],["src/boards/services/board.service.ts",{"_index":212,"title":{},"body":{"injectables/BoardService.html":{},"coverage.html":{}}}],["src/boards/services/board.service.ts:14",{"_index":218,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/boards/services/board.service.ts:7",{"_index":216,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/cluster.service.ts",{"_index":238,"title":{},"body":{"injectables/ClusterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cluster.service.ts:9",{"_index":243,"title":{},"body":{"injectables/ClusterService.html":{}}}],["src/main.ts",{"_index":743,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/schema/schema.gql",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["src/teams/teams.module.ts",{"_index":318,"title":{},"body":{"modules/TeamsModule.html":{}}}],["src/users/controllers/users.controller.ts",{"_index":411,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/controllers/users.controller.ts:12",{"_index":413,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/entities/image.entity.ts",{"_index":274,"title":{},"body":{"classes/Image.html":{},"coverage.html":{}}}],["src/users/entities/image.entity.ts:13",{"_index":277,"title":{},"body":{"classes/Image.html":{}}}],["src/users/entities/image.entity.ts:9",{"_index":278,"title":{},"body":{"classes/Image.html":{}}}],["src/users/entities/oauth",{"_index":311,"title":{},"body":{"classes/OauthTOken.html":{},"coverage.html":{}}}],["src/users/entities/user.entity",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/users/entities/user.entity.ts",{"_index":319,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:11",{"_index":326,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:15",{"_index":329,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:19",{"_index":328,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:23",{"_index":323,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:27",{"_index":325,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:31",{"_index":330,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:35",{"_index":327,"title":{},"body":{"classes/User.html":{}}}],["src/users/resolvers/user.resolver.ts",{"_index":338,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{}}}],["src/users/resolvers/user.resolver.ts:11",{"_index":340,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/users/resolvers/user.resolver.ts:16",{"_index":346,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/users/resolvers/user.resolver.ts:25",{"_index":343,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/users/services/user.service",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/services/user.service.ts",{"_index":370,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/users/services/user.service.ts:16",{"_index":387,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/services/user.service.ts:36",{"_index":379,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/services/user.service.ts:40",{"_index":381,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/services/user.service.ts:44",{"_index":383,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/services/user.service.ts:53",{"_index":385,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/services/user.service.ts:9",{"_index":377,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/users.module.ts",{"_index":418,"title":{},"body":{"modules/UsersModule.html":{}}}],["stable",{"_index":487,"title":{},"body":{"contributing.html":{}}}],["started",{"_index":423,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":239,"title":{},"body":{"injectables/ClusterService.html":{}}}],["stating",{"_index":592,"title":{},"body":{"contributing.html":{}}}],["step",{"_index":655,"title":{},"body":{"contributing.html":{}}}],["steps",{"_index":674,"title":{},"body":{"contributing.html":{}}}],["still",{"_index":573,"title":{},"body":{"contributing.html":{}}}],["strategies/jwt.strategy",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":287,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"classes/Image.html":{},"injectables/LocalStrategy.html":{},"classes/OauthTOken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["style",{"_index":715,"title":{},"body":{"contributing.html":{}}}],["styles",{"_index":721,"title":{},"body":{"contributing.html":{}}}],["sub",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":845,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":838,"title":{},"body":{"license.html":{}}}],["submit",{"_index":570,"title":{},"body":{"contributing.html":{}}}],["submitting",{"_index":606,"title":{},"body":{"contributing.html":{}}}],["substantial",{"_index":851,"title":{},"body":{"license.html":{}}}],["suite",{"_index":626,"title":{},"body":{"contributing.html":{}}}],["super",{"_index":292,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":877,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":538,"title":{},"body":{"contributing.html":{}}}],["svg",{"_index":878,"title":{},"body":{"modules.html":{}}}],["table",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":745,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":509,"title":{},"body":{"contributing.html":{}}}],["take",{"_index":600,"title":{},"body":{"contributing.html":{}}}],["task",{"_index":537,"title":{},"body":{"contributing.html":{}}}],["team",{"_index":455,"title":{},"body":{"contributing.html":{}}}],["teams/teams.module",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["teamsmodule",{"_index":14,"title":{"modules/TeamsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TeamsModule.html":{},"modules.html":{},"overview.html":{}}}],["template",{"_index":617,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["test",{"_index":548,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["tested",{"_index":623,"title":{},"body":{"contributing.html":{}}}],["tests",{"_index":474,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["text",{"_index":443,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["thank",{"_index":432,"title":{},"body":{"contributing.html":{}}}],["thing",{"_index":783,"title":{},"body":{"index.html":{}}}],["this.accesstoken",{"_index":317,"title":{},"body":{"classes/OauthTOken.html":{}}}],["this.authservice.login(req.user",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.registeruser(userdto",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":309,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.boardrepository.find",{"_index":222,"title":{},"body":{"injectables/BoardService.html":{}}}],["this.boardservice.findall",{"_index":231,"title":{},"body":{"controllers/BoardsController.html":{}}}],["this.jwtservice.sign(payload",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.salt",{"_index":402,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.delete(id",{"_index":409,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.find",{"_index":405,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone",{"_index":393,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone(id",{"_index":406,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(user",{"_index":404,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.findall",{"_index":365,"title":{},"body":{"classes/UserResolver.html":{},"controllers/UsersController.html":{}}}],["this.userservice.finduserbyandpassword(username",{"_index":367,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.usersservice.finduserbyandpassword(username",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.save(userdto.email",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["thread",{"_index":587,"title":{},"body":{"contributing.html":{}}}],["through",{"_index":463,"title":{},"body":{"contributing.html":{}}}],["throw",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["time",{"_index":638,"title":{},"body":{"contributing.html":{}}}],["times",{"_index":476,"title":{},"body":{"contributing.html":{}}}],["token.type",{"_index":358,"title":{},"body":{"classes/UserResolver.html":{}}}],["token.type.ts",{"_index":312,"title":{},"body":{"classes/OauthTOken.html":{},"coverage.html":{}}}],["token.type.ts:7",{"_index":315,"title":{},"body":{"classes/OauthTOken.html":{}}}],["tolerated",{"_index":446,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["tool",{"_index":553,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["tools",{"_index":660,"title":{},"body":{"contributing.html":{},"dependencies.html":{}}}],["tort",{"_index":872,"title":{},"body":{"license.html":{}}}],["track",{"_index":578,"title":{},"body":{"contributing.html":{}}}],["trivial",{"_index":556,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"classes/Board.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["true})@column({nullable",{"_index":200,"title":{},"body":{"classes/Board.html":{},"classes/User.html":{}}}],["try",{"_index":530,"title":{},"body":{"contributing.html":{}}}],["two",{"_index":519,"title":{},"body":{"contributing.html":{}}}],["type",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Board.html":{},"injectables/BoardService.html":{},"injectables/ClusterService.html":{},"injectables/GqlAuthGuard.html":{},"classes/Image.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/OauthTOken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["typeorm",{"_index":206,"title":{},"body":{"classes/Board.html":{},"injectables/BoardService.html":{},"classes/Image.html":{},"classes/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"modules/BoardsModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([board",{"_index":236,"title":{},"body":{"modules/BoardsModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":421,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["types/bcrypt",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["ubuntu",{"_index":662,"title":{},"body":{"contributing.html":{}}}],["unauthorizedexception",{"_index":308,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["under",{"_index":730,"title":{},"body":{"contributing.html":{}}}],["understand",{"_index":444,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["unit",{"_index":711,"title":{},"body":{"contributing.html":{}}}],["unknown",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unsure",{"_index":723,"title":{},"body":{"contributing.html":{}}}],["up",{"_index":598,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["updated",{"_index":704,"title":{},"body":{"contributing.html":{}}}],["use",{"_index":550,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["useguards",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BoardsController.html":{},"classes/UserResolver.html":{},"controllers/UsersController.html":{}}}],["useguards(gqlauthguard",{"_index":360,"title":{},"body":{"classes/UserResolver.html":{}}}],["useguards(gqlauthguard)@query(undefined",{"_index":345,"title":{},"body":{"classes/UserResolver.html":{}}}],["useguards(jwtauthguard",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BoardsController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@get",{"_index":226,"title":{},"body":{"controllers/BoardsController.html":{}}}],["useguards(jwtauthguard)@get('profile",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('auth/login')@httpcode(httpstatus.ok",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":32,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["user.decorator",{"_index":356,"title":{},"body":{"classes/UserResolver.html":{}}}],["user.decorator.ts",{"_index":739,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":396,"title":{},"body":{"injectables/UserService.html":{}}}],["user.firstaccess",{"_index":397,"title":{},"body":{"injectables/UserService.html":{}}}],["user.password",{"_index":403,"title":{},"body":{"injectables/UserService.html":{}}}],["user.userid",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["useralreadyexisits",{"_index":392,"title":{},"body":{"injectables/UserService.html":{}}}],["userdto",{"_index":86,"title":{"classes/UserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["userdto.password",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":192,"title":{},"body":{"classes/Board.html":{},"injectables/JwtStrategy.html":{}}}],["username",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UserResolver.html":{},"contributing.html":{}}}],["userrepository",{"_index":378,"title":{},"body":{"injectables/UserService.html":{}}}],["userresolver",{"_index":337,"title":{"classes/UserResolver.html":{}},"body":{"classes/UserResolver.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["users",{"_index":332,"title":{},"body":{"classes/User.html":{},"classes/UserResolver.html":{},"controllers/UsersController.html":{}}}],["users(@currentuser",{"_index":362,"title":{},"body":{"classes/UserResolver.html":{}}}],["users(user",{"_index":344,"title":{},"body":{"classes/UserResolver.html":{}}}],["users/entities/user.entity",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.module",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["userscontroller",{"_index":410,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":158,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["usersmodule",{"_index":15,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["using",{"_index":527,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["v3.6.0",{"_index":681,"title":{},"body":{"contributing.html":{}}}],["v7.0.0",{"_index":647,"title":{},"body":{"contributing.html":{}}}],["validate",{"_index":282,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":284,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":305,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateuser",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":389,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":887,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":702,"title":{},"body":{"contributing.html":{}}}],["version",{"_index":500,"title":{},"body":{"contributing.html":{}}}],["versioning",{"_index":502,"title":{},"body":{"contributing.html":{}}}],["versions",{"_index":490,"title":{},"body":{"contributing.html":{}}}],["very",{"_index":427,"title":{},"body":{"contributing.html":{}}}],["video",{"_index":582,"title":{},"body":{"contributing.html":{}}}],["void",{"_index":245,"title":{},"body":{"injectables/ClusterService.html":{}}}],["want",{"_index":577,"title":{},"body":{"contributing.html":{}}}],["wanting",{"_index":429,"title":{},"body":{"contributing.html":{}}}],["warranties",{"_index":858,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":854,"title":{},"body":{"license.html":{}}}],["way",{"_index":543,"title":{},"body":{"contributing.html":{}}}],["webpack",{"_index":695,"title":{},"body":{"contributing.html":{}}}],["weeks",{"_index":516,"title":{},"body":{"contributing.html":{}}}],["whether",{"_index":512,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["windows",{"_index":672,"title":{},"body":{"contributing.html":{}}}],["wipkanban",{"_index":431,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["wipkanban.com",{"_index":818,"title":{},"body":{"license.html":{}}}],["without",{"_index":830,"title":{},"body":{"license.html":{}}}],["work",{"_index":449,"title":{},"body":{"contributing.html":{}}}],["worker.process.pid",{"_index":258,"title":{},"body":{"injectables/ClusterService.html":{}}}],["workflow",{"_index":687,"title":{},"body":{"contributing.html":{}}}],["working",{"_index":579,"title":{},"body":{"contributing.html":{}}}],["x",{"_index":656,"title":{},"body":{"contributing.html":{}}}],["xcode",{"_index":657,"title":{},"body":{"contributing.html":{}}}],["yarn",{"_index":612,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["yarnsetting",{"_index":789,"title":{},"body":{"index.html":{}}}],["year",{"_index":520,"title":{},"body":{"contributing.html":{}}}],["yes",{"_index":316,"title":{},"body":{"classes/OauthTOken.html":{}}}],["you're",{"_index":566,"title":{},"body":{"contributing.html":{}}}],["you've",{"_index":621,"title":{},"body":{"contributing.html":{}}}],["zoom",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBoardsModule\n\nBoardsModule\n\nAppModule -->\n\nBoardsModule->AppModule\n\n\n\n\n\nTeamsModule\n\nTeamsModule\n\nAppModule -->\n\nTeamsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            BoardsModule\n                        \n                        \n                            TeamsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { TeamsModule } from './teams/teams.module';\nimport { BoardsModule } from './boards/boards.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './users/Entities/user.entity';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { ConfigModule } from '@nestjs/config';\nimport { Board } from './boards/Entities/board.entitie';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    TypeOrmModule.forRoot({\n      type: process.env.DRIVER_DB as any,\n      host: process.env.HOST_DB,\n      port: process.env.PORT_DB as any,\n      database: process.env.DATABASE,\n      entities: [User, Board],\n      logging: true,\n    }),\n    GraphQLModule.forRoot({\n      autoSchemaFile: 'src/schema/schema.gql',\n      context: ({ req }) => ({ req }),\n    }),\n    UsersModule,\n    AuthModule,\n    TeamsModule,\n    BoardsModule\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/controllers/auth.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/auth/controllers/auth.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('auth/login')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/controllers/auth.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            registerUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser(userDto: UserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('auth/register')@HttpCode(HttpStatus.CREATED)\n                \n            \n\n            \n                \n                    Defined in src/auth/controllers/auth.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Request, Post, UseGuards, Get, Body, Param, HttpException, HttpStatus, HttpCode } from '@nestjs/common';\nimport { AuthService } from '../services/auth.service';\nimport { LocalAuthGuard } from '../guards/local-auth.guard';\nimport { JwtAuthGuard } from '../guards/jwt-auth.guard';\nimport { UserDto } from '../dto/user.dto';\nimport { User } from 'src/users/Entities/user.entity';\n\n@Controller()\nexport class AuthController {\n  constructor(private authService: AuthService) { }\n\n  @UseGuards(LocalAuthGuard)\n  @Post('auth/login')\n  @HttpCode(HttpStatus.OK)\n  async login(@Request() req) {\n    return this.authService.login(req.user);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('profile')\n  getProfile(@Request() req) {\n    return req.user;\n  }\n\n  @Post('auth/register')\n  @HttpCode(HttpStatus.CREATED)\n  async registerUser(@Body() userDto: UserDto) {\n\n    const result: User | String = await this.authService.registerUser(userDto);\n\n    if (typeof result == \"string\") {\n      throw new HttpException(result, HttpStatus.NOT_ACCEPTABLE);\n    }\n\n    return result;\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './services/auth.service';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from './constants';\nimport { AuthController } from './controllers/auth.controller';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '3600s' },\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n  controllers: [AuthController]\n})\n\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/services/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Public\n                                registerUser\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/services/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/services/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser(userDto: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/services/auth.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/services/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, HttpException, HttpStatus } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { UserService } from 'src/users/services/user.service';\nimport { UserDto } from '../dto/user.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UserService,\n    private jwtService: JwtService,\n  ) { }\n\n  async validateUser(username: string, pass: string): Promise {\n    const user = await this.usersService.findUserByAndPassword(username, pass);\n\n    if (user !== null) {\n      return user;\n    }\n\n    return null;\n  }\n\n  async login(user: any) {\n    const payload = { username: user.username, sub: user.userId };\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n\n  public registerUser(userDto: UserDto) {\n\n    const { password, confirmPassword } = userDto;\n\n    if (password !== confirmPassword) {\n      throw new HttpException(\"The password and confirmPassword field are not equals\", HttpStatus.NOT_ACCEPTABLE);\n    }\n\n    return this.usersService.save(userDto.email, userDto.password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Board.html":{"url":"classes/Board.html","title":"class - Board","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Board\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/boards/Entities/board.entitie.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/boards/Entities/board.entitie.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectID\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ObjectIdColumn()@Field(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/boards/Entities/board.entitie.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field({nullable: true})@Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/boards/Entities/board.entitie.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectID\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ObjectIdColumn()@Field(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/boards/Entities/board.entitie.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ObjectID, ObjectIdColumn, Column } from \"typeorm\";\nimport { Field, ObjectType } from '@nestjs/graphql';\n\n@Entity({ name: 'boards' })\n@ObjectType()\nexport class Board {\n\n    @ObjectIdColumn()\n    @Field(type => String)\n    id: ObjectID;\n\n    @Field({ nullable: true })\n    @Column({ nullable: true })\n    name: String;\n\n    @ObjectIdColumn()\n    @Field(type => String)\n    userId: ObjectID;\n\n    @Field()\n    @Column()\n    createdAt: Date;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BoardService.html":{"url":"injectables/BoardService.html","title":"injectable - BoardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BoardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/boards/services/board.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(boardRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/boards/services/board.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        boardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/boards/services/board.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Board } from \"../Entities/board.entitie\"\n\n@Injectable()\nexport class BoardService {\n\n  constructor(\n    @InjectRepository(Board)\n    private boardRepository: Repository,\n  ) { }\n\n  findAll() {\n    return this.boardRepository.find();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BoardsController.html":{"url":"controllers/BoardsController.html","title":"controller - BoardsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BoardsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/boards/controllers/board.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /boards\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/boards/controllers/board.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Request, UseGuards, Get } from '@nestjs/common';\nimport { JwtAuthGuard } from '../../auth/guards/jwt-auth.guard';\nimport { BoardService } from '../services/board.service';\n\n@Controller(\"/boards\")\nexport class BoardsController {\n  constructor(private boardService: BoardService) { }\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  getProfile(@Request() req) {\n    return this.boardService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BoardsModule.html":{"url":"modules/BoardsModule.html","title":"module - BoardsModule","body":"\n                   \n\n\n\n\n    Modules\n    BoardsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BoardsModule\n\n\n\ncluster_BoardsModule_providers\n\n\n\n\nBoardService\n\nBoardService\n\n\n\nBoardsModule\n\nBoardsModule\n\nBoardsModule -->\n\nBoardService->BoardsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/boards/boards.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BoardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BoardsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { BoardsController } from './controllers/board.controller';\nimport { Board } from './Entities/board.entitie';\nimport { BoardService } from './services/board.service';\n\n@Module({\n    imports: [\n        TypeOrmModule.forFeature([Board]),\n    ],\n    providers: [BoardService],\n    controllers: [BoardsController],\n    exports: []\n})\nexport class BoardsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClusterService.html":{"url":"injectables/ClusterService.html","title":"injectable - ClusterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ClusterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cluster.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clusterize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            clusterize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clusterize(callback: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/cluster.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    callback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as cluster from 'cluster';\nimport * as os from 'os'\n\nconst numCPUs = os.cpus().length;\n\n@Injectable()\nexport default class ClusterService {\n    static clusterize(callback: Function): void {\n        if (cluster.isMaster) {\n            console.log(`MASTER SERVER (${process.pid}) IS RUNNING `);\n\n            for (let i = 0; i  {\n                console.log(`worker ${worker.process.pid} died`);\n            });\n        } else {\n            callback();\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GqlAuthGuard.html":{"url":"injectables/GqlAuthGuard.html","title":"injectable - GqlAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GqlAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/gql.auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequest\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequest(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/gql.auth.guard.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AuthGuard } from \"@nestjs/passport\";\nimport { ExecutionContext, Injectable } from \"@nestjs/common\";\nimport { GqlExecutionContext } from \"@nestjs/graphql\";\n\n@Injectable()\nexport class GqlAuthGuard extends AuthGuard('jwt') {\n  getRequest(context: ExecutionContext) {\n    const ctx = GqlExecutionContext.create(context);\n    return ctx.getContext().req;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Image.html":{"url":"classes/Image.html","title":"class - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/Entities/image.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newFilename\n                            \n                            \n                                originalname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newFilename\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/Entities/image.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            originalname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/Entities/image.entity.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Column} from \"typeorm\";\nimport { Field, ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class Image {\n\n    @Field()\n    @Column()\n    originalname: string;\n\n    @Field()\n    @Column()\n    newFilename: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from '../constants';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OauthTOken.html":{"url":"classes/OauthTOken.html","title":"class - OauthTOken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OauthTOken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/Entities/oauth-token.type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accessToken?: string)\n                    \n                \n                        \n                            \n                                Defined in src/users/Entities/oauth-token.type.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accessToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/Entities/oauth-token.type.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field } from \"@nestjs/graphql\";\n\n@ObjectType()\nexport class OauthTOken {\n\n    @Field()\n    public accessToken: string;\n\n    constructor(accessToken?: string) {\n        this.accessToken = accessToken;\n    }\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamsModule.html":{"url":"modules/TeamsModule.html","title":"module - TeamsModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/teams/teams.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class TeamsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/Entities/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstAccess\n                            \n                            \n                                id\n                            \n                            \n                                image\n                            \n                            \n                                lastname\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/Entities/user.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstAccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/Entities/user.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectID\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ObjectIdColumn()@Field(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/Entities/user.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Image\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/Entities/user.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field({nullable: true})@Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/Entities/user.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field({nullable: true})@Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/Entities/user.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/Entities/user.entity.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ObjectID, ObjectIdColumn, Column } from \"typeorm\";\nimport { Field, ObjectType } from '@nestjs/graphql';\nimport { Image } from \"./image.entity\";\n\n@Entity({ name: 'users' })\n@ObjectType()\nexport class User {\n\n    @ObjectIdColumn()\n    @Field(type => String)\n    id: ObjectID;\n\n    @Field({nullable: true})\n    @Column({ nullable: true })\n    name: String;\n\n    @Field({nullable: true})\n    @Column({ nullable: true })\n    lastname: String;\n\n    @Field()\n    @Column()\n    email: String;\n\n    @Field()\n    @Column()\n    firstAccess: boolean;\n\n    @Field()\n    @Column()\n    password: String;\n\n    @Field()\n    @Column()\n    image: Image;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                confirmPassword\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confirmPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/user.dto.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserDto {\n    public email: String;\n    public password: String;\n    public confirmPassword: String;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/resolvers/user.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                login\n                            \n                            \n                                    Public\n                                    Async\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/users/resolvers/user.resolver.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username: string, password: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/users/resolvers/user.resolver.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            users\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    users(user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(GqlAuthGuard)@Query(undefined)\n                \n            \n\n            \n                \n                    Defined in src/users/resolvers/user.resolver.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql';\nimport { UserService } from '../services/user.service';\nimport { User } from '../Entities/user.entity';\nimport { UseGuards } from '@nestjs/common';\nimport { GqlAuthGuard } from 'src/auth/guards/gql.auth.guard';\nimport { CurrentUser } from 'src/auth/decorators/current-user.decorator';\nimport { OauthTOken } from '../Entities/oauth-token.type';\n\n\n@Resolver('Users')\nexport class UserResolver {\n  constructor(private userService: UserService) { }\n\n  @UseGuards(GqlAuthGuard)\n  @Query(returns => [User])\n  public async users(@CurrentUser() user) {\n    console.log(user);\n    const users: Array = await this.userService.findAll();\n\n    return users;\n  }\n\n\n  @Mutation(returns => OauthTOken)\n  public async login(\n    @Args({ name: 'username' }) username: string,\n    @Args({ name: 'password' }) password: string\n  ) {\n\n    const user: any = await this.userService.findUserByAndPassword(username, password);\n\n    console.log(user);\n\n    const oauthTOken: OauthTOken = new OauthTOken();\n    oauthTOken.accessToken = \"aushaushauaushausha\";\n\n    return oauthTOken;\n\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                salt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                findUserByAndPassword\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/services/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/user.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/user.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findUserByAndPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserByAndPassword(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/user.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/user.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(email: String, password: String)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/user.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            salt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/users/services/user.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../Entities/user.entity';\n\n@Injectable()\nexport class UserService {\n\n  private salt: number = 10;\n\n  constructor(\n    @InjectRepository(User)\n    private userRepository: Repository,\n  ) { }\n\n  async save(email: String, password: String): Promise {\n\n    const userAlreadyExisits: User = await this.userRepository.findOne({ where: { email } });\n\n    if (userAlreadyExisits) {\n      return \"User already exists!\";\n    }\n\n    const user: User = new User();\n    user.email = email;\n    user.firstAccess = true;\n\n    const bcrypt = require('bcrypt');\n    const hash = bcrypt.hashSync(password, this.salt);\n\n    user.password = hash;\n\n    return this.userRepository.save(user);\n  }\n\n  findAll(): Promise {\n    return this.userRepository.find();\n  }\n\n  findOne(id: string): Promise {\n    return this.userRepository.findOne(id);\n  }\n\n  async findUserByAndPassword(email: string, password: string) {\n    const user: any = await this.userRepository.findOne({ where: { email } });\n    const bcrypt = require('bcrypt');\n\n    const isPasswordMatching = bcrypt.compareSync(password, user.password);\n\n    return isPasswordMatching ? user : null;\n  }\n\n  async remove(id: string): Promise {\n    await this.userRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/controllers/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/controllers/users.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards } from '@nestjs/common';\nimport { UserService } from '../services/user.service';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auth.guard';\n\n//@UseGuards(JwtAuthGuard)\n@Controller('/users')\nexport class UsersController {\n  constructor(private userService: UserService) { }\n\n\n  @Get()\n  public getUsers() {\n    return this.userService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUsersModule\n\nUsersModule\n\nUserService  -->\n\nUsersModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUsersModule -->\n\nUserService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './Entities/user.entity';\nimport { UsersController } from './controllers/users.controller';\nimport { UserResolver } from './resolvers/user.resolver';\nimport { UserService } from './services/user.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([User]),\n  ],\n  providers: [UserResolver, UserService],\n  controllers: [UsersController],\n  exports: [UserService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nFirst of all we are very happy that you are wanting to contribute to WipKanban. Thank you!!\nCode of Conduct\nWipKanban has adopted a Code of Conduct that we expect project participants to adhere to. Please read the full text so that you can understand what actions will and will not be tolerated.\nOpen Development\nAll work on WipKanban happens directly on GitHub. Both core team members and external contributors send pull requests which go through the same review process.\nBranch Organization\nWe will do our best to keep the master branch in good shape, with tests passing at all times. But in order to move fast, we will make API changes that your application might not be compatible with.\nIf you send a pull request, please do it against the master branch. We maintain stable branches for major versions separately but we don't accept pull requests to them directly. Instead, we cherry-pick non-breaking changes from master to the latest stable major version.\nSemantic Versioning\nWipKanban follows semantic versioning. We release patch versions for bugfixes, minor versions for new features, and major versions for any breaking changes.\nWe tag every pull request with a label marking whether the change should go in the next patch, minor, or a major version. We release new patch versions every few weeks, minor versions every few months, and major versions one or two times a year.\nEvery significant change is documented in the changelog file.\nBugs\nWhere to Find Known Issues\nWe are using GitHub Issues for our public bugs. We keep a close eye on this and try to make it clear when we have an internal fix in progress. Before filing a new task, try to make sure your problem doesn't already exist.\nReporting New Issues\nThe best way to get your bug fixed is to provide a reduced test case. Use JSFiddle, is a great tool.\nProposing a Change\nIf you intend to change the public API, or make any non-trivial changes to the implementation, we recommend filing an issue. This lets us reach an agreement on your proposal before you put significant effort into it.\nIf you're only fixing a bug, it's fine to submit a pull request right away but we still recommend to file an issue detailing what you're fixing. This is helpful in case we don't accept that specific fix but want to keep track of the issue.\nYour First Pull Request\nWorking on your first Pull Request? You can learn how from this free video series:\nHow to Contribute to an Open Source Project on GitHub\nIf you decide to fix an issue, please be sure to check the comment thread in case somebody is already working on a fix. If nobody is working on it at the moment, please leave a comment stating that you intend to work on it so other people don't accidentally duplicate your effort.\nIf somebody claims an issue but doesn't follow up for more than two weeks, it's fine to take over it but you should still leave a comment.\nSending a Pull Request\nWe will is monitoring for pull requests. We will review your pull request and either merge it, request changes to it, or close it with an explanation.\nBefore submitting a pull request, please make sure the following is done:\n\nFork the repository and create your branch from master.\nRun yarn install in the repository root.\nRename .env-template to .env and complete it. It is necessary to the backend tests.\nIf you've fixed a bug or added code that should be tested, add tests!\nEnsure the test suite passes (yarn test).\nFormat your code with prettier (yarn run prettier).\nIf you haven't already, agrree the CLA.\n\nContributor License Agreement (CLA)\nIn order to accept your pull request, we need you to submit a CLA. You only need to do this once, so if you've done this for another WipKanban open source project, you're good to go. If you are submitting a pull request for the first time, just let us know that you have to agree the CLA and we can cross-check with your GitHub username.\nAgree here.\nContribution Prerequisites\n\nYou have Node installed at v7.0.0+.\nYou have gcc installed or are comfortable installing a compiler if needed. Some of our dependencies may require a compilation step. On OS X, the Xcode Command Line Tools will cover this. On Ubuntu, apt-get install build-essential will install the required packages. Similar commands should work on other Linux distros. Windows will require some additional steps, see the node-gyp installation instructions for details.\nYou have mongoDB installed at v3.6.0+.\nYou are familiar with Reactjs ecossystem, Expressjs, Mongodb and Git.\n\nDevelopment Workflow\nAfter cloning Wipkanban, run yarn install to fetch its dependencies.\nThen, you can run several commands:\n\nyarn test runs the complete test suite backend api and frontend.\nyarn prettier to format your code.\nyarn analyze to generate webpack bundle analyze.\nyarn apidoc to generate api documentation. To access go to apidoc/index.html.\nyarn outdated to verify if your dependences are updated.\nyarn build creates a build folder with all the code to production.\n\nWe recommend running yarn test to make sure you don't introduce any regressions as you work on your change..\nWe still require that your pull request contains unit tests for any new functionality. This way we can ensure that we don't break your code in the future.\nStyle Guide\nWe use an automatic code formatter called Prettier.\nRun yarn prettier after making any changes to the code.\nHowever, there are still some styles that the linter cannot pick up. If you are unsure about something, looking at Airbnb's Style Guide will guide you in the right direction.\nLicense\nBy contributing to WipKanban, you agree that your contributions will be licensed under its MIT license \n.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/controllers/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/gql.auth.guard.ts\n            \n            injectable\n            GqlAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/boards/Entities/board.entitie.ts\n            \n            class\n            Board\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/boards/controllers/board.controller.ts\n            \n            controller\n            BoardsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/boards/services/board.service.ts\n            \n            injectable\n            BoardService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cluster.service.ts\n            \n            injectable\n            ClusterService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cluster.service.ts\n            \n            variable\n            numCPUs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/Entities/image.entity.ts\n            \n            class\n            Image\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/Entities/oauth-token.type.ts\n            \n            class\n            OauthTOken\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/Entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/controllers/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/resolvers/user.resolver.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/graphql : ^7.3.7\n        \n            @nestjs/jwt : ^7.0.0\n        \n            @nestjs/passport : ^7.0.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/typeorm : ^7.0.0\n        \n            @types/bcrypt : ^3.0.0\n        \n            apollo-server-express : ^2.13.1\n        \n            bcrypt : ^5.0.0\n        \n            graphql : ^15.0.0\n        \n            graphql-tools : ^5.0.0\n        \n            mongodb : ^3.5.7\n        \n            newman : ^5.1.2\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            typeorm : ^0.2.24\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWipKanban\n\n\n\n\n\n\n\nA open source kanban tool for Lean Management.\n\nMotivation\nBe the best tool for lean management based on kanban. And one more thing, be Open Source!\nHow to use\nWipKanban is bult with Reactjs, Express and MongoDb as database\nDownload source code:\ngit clone https://github.com/wipkanban/wipkanbanInstall dependences:\ncd wipkanban\n\nyarnSetting up the .env file:\nRename .env-template file to .env and fill with your data about Hosts, database and others.\nRun application\n\nyarn server\nTo access enter the address htts://:3000 in the browser\nRun tests\nThe tests are divided between client and server\nHow to Contribute\nThe main purpose of this repository is to continue to evolve WipKanban, making it the best possible experience in using Kanban. Development of WipKanban happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements.\nCode of Conduct\nWipKanban has adopted a Code of Conduct that we expect project participants to adhere to. Please read the full text so that you can understand what actions will and will not be tolerated.\nContributing Guide\nRead our contributing guide to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to WipKanban.\nContributor License Agreement \nPlease review and sign our CLA at https://cla-assistant.io/wipkanban/wipkanban\nMIT © WipKanban\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017-present, Wipkanban.com.\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BoardsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BoardsModule\n\n\n\ncluster_BoardsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nBoardsModule\n\nBoardsModule\n\nAppModule -->\n\nBoardsModule->AppModule\n\n\n\n\n\nTeamsModule\n\nTeamsModule\n\nAppModule -->\n\nTeamsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUsersModule->UserService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nBoardService\n\nBoardService\n\nBoardsModule -->\n\nBoardService->BoardsModule\n\n\n\n\n\nUserService\n\nUserService\n\nUsersModule -->\n\nUserService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CurrentUser   (src/.../current-user.decorator.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            numCPUs   (src/.../cluster.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/decorators/current-user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator(\n  (data: unknown, context: ExecutionContext) => {\n    const ctx = GqlExecutionContext.create(context);\n    return ctx.getContext().req.user;\n  },\n)\n                        \n                    \n\n\n            \n        \n\n    src/auth/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  secret: 'secretKey',\n}\n                        \n                    \n\n\n            \n        \n\n    src/cluster.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            numCPUs\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : os.cpus().length\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
